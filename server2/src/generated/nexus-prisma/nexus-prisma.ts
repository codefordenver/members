/**
 * This file was automatically generated by nexus-prisma@0.3.5
 * Do not make changes to this file directly
 */

import { core } from 'nexus'
import { GraphQLResolveInfo } from 'graphql'
import * as prisma from '../prisma-client'

declare global {
  interface NexusPrismaGen extends NexusPrismaTypes {}
}

export interface NexusPrismaTypes {
  objectTypes: {
    fields: {
      Query: QueryObject
      User: UserObject
      Project: ProjectObject
      Skill: SkillObject
      UserConnection: UserConnectionObject
      PageInfo: PageInfoObject
      UserEdge: UserEdgeObject
      AggregateUser: AggregateUserObject
      ProjectConnection: ProjectConnectionObject
      ProjectEdge: ProjectEdgeObject
      AggregateProject: AggregateProjectObject
      SkillConnection: SkillConnectionObject
      SkillEdge: SkillEdgeObject
      AggregateSkill: AggregateSkillObject
      Mutation: MutationObject
      BatchPayload: BatchPayloadObject
      Subscription: SubscriptionObject
      UserSubscriptionPayload: UserSubscriptionPayloadObject
      UserPreviousValues: UserPreviousValuesObject
      ProjectSubscriptionPayload: ProjectSubscriptionPayloadObject
      ProjectPreviousValues: ProjectPreviousValuesObject
      SkillSubscriptionPayload: SkillSubscriptionPayloadObject
      SkillPreviousValues: SkillPreviousValuesObject
    }
    fieldsDetails: {
      Query: QueryFieldDetails
      User: UserFieldDetails
      Project: ProjectFieldDetails
      Skill: SkillFieldDetails
      UserConnection: UserConnectionFieldDetails
      PageInfo: PageInfoFieldDetails
      UserEdge: UserEdgeFieldDetails
      AggregateUser: AggregateUserFieldDetails
      ProjectConnection: ProjectConnectionFieldDetails
      ProjectEdge: ProjectEdgeFieldDetails
      AggregateProject: AggregateProjectFieldDetails
      SkillConnection: SkillConnectionFieldDetails
      SkillEdge: SkillEdgeFieldDetails
      AggregateSkill: AggregateSkillFieldDetails
      Mutation: MutationFieldDetails
      BatchPayload: BatchPayloadFieldDetails
      Subscription: SubscriptionFieldDetails
      UserSubscriptionPayload: UserSubscriptionPayloadFieldDetails
      UserPreviousValues: UserPreviousValuesFieldDetails
      ProjectSubscriptionPayload: ProjectSubscriptionPayloadFieldDetails
      ProjectPreviousValues: ProjectPreviousValuesFieldDetails
      SkillSubscriptionPayload: SkillSubscriptionPayloadFieldDetails
      SkillPreviousValues: SkillPreviousValuesFieldDetails
    }
  }
  inputTypes: {
    fields: {
      UserWhereUniqueInput: UserWhereUniqueInputInputObject
      ProjectWhereInput: ProjectWhereInputInputObject
      UserWhereInput: UserWhereInputInputObject
      SkillWhereInput: SkillWhereInputInputObject
      ProjectWhereUniqueInput: ProjectWhereUniqueInputInputObject
      SkillWhereUniqueInput: SkillWhereUniqueInputInputObject
      UserCreateInput: UserCreateInputInputObject
      ProjectCreateManyWithoutChampionsInput: ProjectCreateManyWithoutChampionsInputInputObject
      ProjectCreateWithoutChampionsInput: ProjectCreateWithoutChampionsInputInputObject
      SkillCreateManyWithoutProjectsWithSkillInput: SkillCreateManyWithoutProjectsWithSkillInputInputObject
      SkillCreateWithoutProjectsWithSkillInput: SkillCreateWithoutProjectsWithSkillInputInputObject
      UserCreateManyWithoutSkillsInput: UserCreateManyWithoutSkillsInputInputObject
      UserCreateWithoutSkillsInput: UserCreateWithoutSkillsInputInputObject
      SkillCreateManyWithoutUsersWithSkillInput: SkillCreateManyWithoutUsersWithSkillInputInputObject
      SkillCreateWithoutUsersWithSkillInput: SkillCreateWithoutUsersWithSkillInputInputObject
      ProjectCreateManyWithoutSkillsInput: ProjectCreateManyWithoutSkillsInputInputObject
      ProjectCreateWithoutSkillsInput: ProjectCreateWithoutSkillsInputInputObject
      UserCreateManyWithoutProjectsChampionedInput: UserCreateManyWithoutProjectsChampionedInputInputObject
      UserCreateWithoutProjectsChampionedInput: UserCreateWithoutProjectsChampionedInputInputObject
      UserUpdateInput: UserUpdateInputInputObject
      ProjectUpdateManyWithoutChampionsInput: ProjectUpdateManyWithoutChampionsInputInputObject
      ProjectUpdateWithWhereUniqueWithoutChampionsInput: ProjectUpdateWithWhereUniqueWithoutChampionsInputInputObject
      ProjectUpdateWithoutChampionsDataInput: ProjectUpdateWithoutChampionsDataInputInputObject
      SkillUpdateManyWithoutProjectsWithSkillInput: SkillUpdateManyWithoutProjectsWithSkillInputInputObject
      SkillUpdateWithWhereUniqueWithoutProjectsWithSkillInput: SkillUpdateWithWhereUniqueWithoutProjectsWithSkillInputInputObject
      SkillUpdateWithoutProjectsWithSkillDataInput: SkillUpdateWithoutProjectsWithSkillDataInputInputObject
      UserUpdateManyWithoutSkillsInput: UserUpdateManyWithoutSkillsInputInputObject
      UserUpdateWithWhereUniqueWithoutSkillsInput: UserUpdateWithWhereUniqueWithoutSkillsInputInputObject
      UserUpdateWithoutSkillsDataInput: UserUpdateWithoutSkillsDataInputInputObject
      UserUpsertWithWhereUniqueWithoutSkillsInput: UserUpsertWithWhereUniqueWithoutSkillsInputInputObject
      UserScalarWhereInput: UserScalarWhereInputInputObject
      UserUpdateManyWithWhereNestedInput: UserUpdateManyWithWhereNestedInputInputObject
      UserUpdateManyDataInput: UserUpdateManyDataInputInputObject
      SkillUpsertWithWhereUniqueWithoutProjectsWithSkillInput: SkillUpsertWithWhereUniqueWithoutProjectsWithSkillInputInputObject
      SkillScalarWhereInput: SkillScalarWhereInputInputObject
      SkillUpdateManyWithWhereNestedInput: SkillUpdateManyWithWhereNestedInputInputObject
      SkillUpdateManyDataInput: SkillUpdateManyDataInputInputObject
      ProjectUpsertWithWhereUniqueWithoutChampionsInput: ProjectUpsertWithWhereUniqueWithoutChampionsInputInputObject
      ProjectScalarWhereInput: ProjectScalarWhereInputInputObject
      ProjectUpdateManyWithWhereNestedInput: ProjectUpdateManyWithWhereNestedInputInputObject
      ProjectUpdateManyDataInput: ProjectUpdateManyDataInputInputObject
      SkillUpdateManyWithoutUsersWithSkillInput: SkillUpdateManyWithoutUsersWithSkillInputInputObject
      SkillUpdateWithWhereUniqueWithoutUsersWithSkillInput: SkillUpdateWithWhereUniqueWithoutUsersWithSkillInputInputObject
      SkillUpdateWithoutUsersWithSkillDataInput: SkillUpdateWithoutUsersWithSkillDataInputInputObject
      ProjectUpdateManyWithoutSkillsInput: ProjectUpdateManyWithoutSkillsInputInputObject
      ProjectUpdateWithWhereUniqueWithoutSkillsInput: ProjectUpdateWithWhereUniqueWithoutSkillsInputInputObject
      ProjectUpdateWithoutSkillsDataInput: ProjectUpdateWithoutSkillsDataInputInputObject
      UserUpdateManyWithoutProjectsChampionedInput: UserUpdateManyWithoutProjectsChampionedInputInputObject
      UserUpdateWithWhereUniqueWithoutProjectsChampionedInput: UserUpdateWithWhereUniqueWithoutProjectsChampionedInputInputObject
      UserUpdateWithoutProjectsChampionedDataInput: UserUpdateWithoutProjectsChampionedDataInputInputObject
      UserUpsertWithWhereUniqueWithoutProjectsChampionedInput: UserUpsertWithWhereUniqueWithoutProjectsChampionedInputInputObject
      ProjectUpsertWithWhereUniqueWithoutSkillsInput: ProjectUpsertWithWhereUniqueWithoutSkillsInputInputObject
      SkillUpsertWithWhereUniqueWithoutUsersWithSkillInput: SkillUpsertWithWhereUniqueWithoutUsersWithSkillInputInputObject
      UserUpdateManyMutationInput: UserUpdateManyMutationInputInputObject
      ProjectCreateInput: ProjectCreateInputInputObject
      ProjectUpdateInput: ProjectUpdateInputInputObject
      ProjectUpdateManyMutationInput: ProjectUpdateManyMutationInputInputObject
      SkillCreateInput: SkillCreateInputInputObject
      SkillUpdateInput: SkillUpdateInputInputObject
      SkillUpdateManyMutationInput: SkillUpdateManyMutationInputInputObject
      UserSubscriptionWhereInput: UserSubscriptionWhereInputInputObject
      ProjectSubscriptionWhereInput: ProjectSubscriptionWhereInputInputObject
      SkillSubscriptionWhereInput: SkillSubscriptionWhereInputInputObject
    }
  }
  enumTypes: {
    UserRole: UserRoleValues,
    ProjectStatus: ProjectStatusValues,
    ProjectOrderByInput: ProjectOrderByInputValues,
    UserOrderByInput: UserOrderByInputValues,
    SkillOrderByInput: SkillOrderByInputValues,
    MutationType: MutationTypeValues,
  }
}

// Types for Query

type QueryObject =
  | QueryFields
  | { name: 'user', args?: QueryUserArgs[] | false, alias?: string  } 
  | { name: 'users', args?: QueryUsersArgs[] | false, alias?: string  } 
  | { name: 'usersConnection', args?: QueryUsersConnectionArgs[] | false, alias?: string  } 
  | { name: 'project', args?: QueryProjectArgs[] | false, alias?: string  } 
  | { name: 'projects', args?: QueryProjectsArgs[] | false, alias?: string  } 
  | { name: 'projectsConnection', args?: QueryProjectsConnectionArgs[] | false, alias?: string  } 
  | { name: 'skill', args?: QuerySkillArgs[] | false, alias?: string  } 
  | { name: 'skills', args?: QuerySkillsArgs[] | false, alias?: string  } 
  | { name: 'skillsConnection', args?: QuerySkillsConnectionArgs[] | false, alias?: string  } 

type QueryFields =
  | 'user'
  | 'users'
  | 'usersConnection'
  | 'project'
  | 'projects'
  | 'projectsConnection'
  | 'skill'
  | 'skills'
  | 'skillsConnection'


type QueryUserArgs =
  | 'where'
type QueryUsersArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryUsersConnectionArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryProjectArgs =
  | 'where'
type QueryProjectsArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryProjectsConnectionArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QuerySkillArgs =
  | 'where'
type QuerySkillsArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QuerySkillsConnectionArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
  

export interface QueryFieldDetails {
  user: {
    type: 'User'
    args: Record<QueryUserArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Query">,
      args: { where: UserWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.User | null> | prisma.User | null
  }
  users: {
    type: 'User'
    args: Record<QueryUsersArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: UserWhereInput | null, orderBy?: prisma.UserOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.User[]> | prisma.User[]
  }
  usersConnection: {
    type: 'UserConnection'
    args: Record<QueryUsersConnectionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: UserWhereInput | null, orderBy?: prisma.UserOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.UserConnection> | prisma.UserConnection
  }
  project: {
    type: 'Project'
    args: Record<QueryProjectArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Query">,
      args: { where: ProjectWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Project | null> | prisma.Project | null
  }
  projects: {
    type: 'Project'
    args: Record<QueryProjectsArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: ProjectWhereInput | null, orderBy?: prisma.ProjectOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Project[]> | prisma.Project[]
  }
  projectsConnection: {
    type: 'ProjectConnection'
    args: Record<QueryProjectsConnectionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: ProjectWhereInput | null, orderBy?: prisma.ProjectOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.ProjectConnection> | prisma.ProjectConnection
  }
  skill: {
    type: 'Skill'
    args: Record<QuerySkillArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Query">,
      args: { where: SkillWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Skill | null> | prisma.Skill | null
  }
  skills: {
    type: 'Skill'
    args: Record<QuerySkillsArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: SkillWhereInput | null, orderBy?: prisma.SkillOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Skill[]> | prisma.Skill[]
  }
  skillsConnection: {
    type: 'SkillConnection'
    args: Record<QuerySkillsConnectionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: SkillWhereInput | null, orderBy?: prisma.SkillOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.SkillConnection> | prisma.SkillConnection
  }
}
  

// Types for User

type UserObject =
  | UserFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'createdAt', args?: [] | false, alias?: string  } 
  | { name: 'updatedAt', args?: [] | false, alias?: string  } 
  | { name: 'email', args?: [] | false, alias?: string  } 
  | { name: 'name', args?: [] | false, alias?: string  } 
  | { name: 'auth0UserId', args?: [] | false, alias?: string  } 
  | { name: 'picture', args?: [] | false, alias?: string  } 
  | { name: 'githubName', args?: [] | false, alias?: string  } 
  | { name: 'flowdockName', args?: [] | false, alias?: string  } 
  | { name: 'description', args?: [] | false, alias?: string  } 
  | { name: 'hasCompletedWizard', args?: [] | false, alias?: string  } 
  | { name: 'role', args?: [] | false, alias?: string  } 
  | { name: 'projectsChampioned', args?: UserProjectsChampionedArgs[] | false, alias?: string  } 
  | { name: 'skills', args?: UserSkillsArgs[] | false, alias?: string  } 

type UserFields =
  | 'id'
  | 'createdAt'
  | 'updatedAt'
  | 'email'
  | 'name'
  | 'auth0UserId'
  | 'picture'
  | 'githubName'
  | 'flowdockName'
  | 'description'
  | 'hasCompletedWizard'
  | 'role'
  | 'projectsChampioned'
  | 'skills'


type UserProjectsChampionedArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type UserSkillsArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
  

export interface UserFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  createdAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  updatedAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  email: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  name: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  auth0UserId: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  picture: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  githubName: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  flowdockName: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  description: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  hasCompletedWizard: {
    type: 'Boolean'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  role: {
    type: 'UserRole'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"User">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.UserRole | null> | prisma.UserRole | null
  }
  projectsChampioned: {
    type: 'Project'
    args: Record<UserProjectsChampionedArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"User">,
      args: { where?: ProjectWhereInput | null, orderBy?: prisma.ProjectOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Project[]> | prisma.Project[]
  }
  skills: {
    type: 'Skill'
    args: Record<UserSkillsArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"User">,
      args: { where?: SkillWhereInput | null, orderBy?: prisma.SkillOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Skill[]> | prisma.Skill[]
  }
}
  

// Types for Project

type ProjectObject =
  | ProjectFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'createdAt', args?: [] | false, alias?: string  } 
  | { name: 'updatedAt', args?: [] | false, alias?: string  } 
  | { name: 'name', args?: [] | false, alias?: string  } 
  | { name: 'headerImage', args?: [] | false, alias?: string  } 
  | { name: 'status', args?: [] | false, alias?: string  } 
  | { name: 'description', args?: [] | false, alias?: string  } 
  | { name: 'cfapiProjectId', args?: [] | false, alias?: string  } 
  | { name: 'repoName', args?: [] | false, alias?: string  } 
  | { name: 'champions', args?: ProjectChampionsArgs[] | false, alias?: string  } 
  | { name: 'skills', args?: ProjectSkillsArgs[] | false, alias?: string  } 

type ProjectFields =
  | 'id'
  | 'createdAt'
  | 'updatedAt'
  | 'name'
  | 'headerImage'
  | 'status'
  | 'description'
  | 'cfapiProjectId'
  | 'repoName'
  | 'champions'
  | 'skills'


type ProjectChampionsArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type ProjectSkillsArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
  

export interface ProjectFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  createdAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  updatedAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  name: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  headerImage: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  status: {
    type: 'ProjectStatus'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Project">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.ProjectStatus | null> | prisma.ProjectStatus | null
  }
  description: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  cfapiProjectId: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  repoName: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  champions: {
    type: 'User'
    args: Record<ProjectChampionsArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Project">,
      args: { where?: UserWhereInput | null, orderBy?: prisma.UserOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.User[]> | prisma.User[]
  }
  skills: {
    type: 'Skill'
    args: Record<ProjectSkillsArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Project">,
      args: { where?: SkillWhereInput | null, orderBy?: prisma.SkillOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Skill[]> | prisma.Skill[]
  }
}
  

// Types for Skill

type SkillObject =
  | SkillFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'createdAt', args?: [] | false, alias?: string  } 
  | { name: 'updatedAt', args?: [] | false, alias?: string  } 
  | { name: 'name', args?: [] | false, alias?: string  } 
  | { name: 'usersWithSkill', args?: SkillUsersWithSkillArgs[] | false, alias?: string  } 
  | { name: 'projectsWithSkill', args?: SkillProjectsWithSkillArgs[] | false, alias?: string  } 

type SkillFields =
  | 'id'
  | 'createdAt'
  | 'updatedAt'
  | 'name'
  | 'usersWithSkill'
  | 'projectsWithSkill'


type SkillUsersWithSkillArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type SkillProjectsWithSkillArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
  

export interface SkillFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  createdAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  updatedAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  name: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  usersWithSkill: {
    type: 'User'
    args: Record<SkillUsersWithSkillArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Skill">,
      args: { where?: UserWhereInput | null, orderBy?: prisma.UserOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.User[]> | prisma.User[]
  }
  projectsWithSkill: {
    type: 'Project'
    args: Record<SkillProjectsWithSkillArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Skill">,
      args: { where?: ProjectWhereInput | null, orderBy?: prisma.ProjectOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Project[]> | prisma.Project[]
  }
}
  

// Types for UserConnection

type UserConnectionObject =
  | UserConnectionFields
  | { name: 'pageInfo', args?: [] | false, alias?: string  } 
  | { name: 'edges', args?: [] | false, alias?: string  } 
  | { name: 'aggregate', args?: [] | false, alias?: string  } 

type UserConnectionFields =
  | 'pageInfo'
  | 'edges'
  | 'aggregate'



  

export interface UserConnectionFieldDetails {
  pageInfo: {
    type: 'PageInfo'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"UserConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PageInfo> | prisma.PageInfo
  }
  edges: {
    type: 'UserEdge'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"UserConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.UserEdge[]> | prisma.UserEdge[]
  }
  aggregate: {
    type: 'AggregateUser'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"UserConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AggregateUser> | prisma.AggregateUser
  }
}
  

// Types for PageInfo

type PageInfoObject =
  | PageInfoFields
  | { name: 'hasNextPage', args?: [] | false, alias?: string  } 
  | { name: 'hasPreviousPage', args?: [] | false, alias?: string  } 
  | { name: 'startCursor', args?: [] | false, alias?: string  } 
  | { name: 'endCursor', args?: [] | false, alias?: string  } 

type PageInfoFields =
  | 'hasNextPage'
  | 'hasPreviousPage'
  | 'startCursor'
  | 'endCursor'



  

export interface PageInfoFieldDetails {
  hasNextPage: {
    type: 'Boolean'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  hasPreviousPage: {
    type: 'Boolean'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  startCursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  endCursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
}
  

// Types for UserEdge

type UserEdgeObject =
  | UserEdgeFields
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'cursor', args?: [] | false, alias?: string  } 

type UserEdgeFields =
  | 'node'
  | 'cursor'



  

export interface UserEdgeFieldDetails {
  node: {
    type: 'User'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"UserEdge">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.User> | prisma.User
  }
  cursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for AggregateUser

type AggregateUserObject =
  | AggregateUserFields
  | { name: 'count', args?: [] | false, alias?: string  } 

type AggregateUserFields =
  | 'count'



  

export interface AggregateUserFieldDetails {
  count: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for ProjectConnection

type ProjectConnectionObject =
  | ProjectConnectionFields
  | { name: 'pageInfo', args?: [] | false, alias?: string  } 
  | { name: 'edges', args?: [] | false, alias?: string  } 
  | { name: 'aggregate', args?: [] | false, alias?: string  } 

type ProjectConnectionFields =
  | 'pageInfo'
  | 'edges'
  | 'aggregate'



  

export interface ProjectConnectionFieldDetails {
  pageInfo: {
    type: 'PageInfo'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"ProjectConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PageInfo> | prisma.PageInfo
  }
  edges: {
    type: 'ProjectEdge'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"ProjectConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.ProjectEdge[]> | prisma.ProjectEdge[]
  }
  aggregate: {
    type: 'AggregateProject'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"ProjectConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AggregateProject> | prisma.AggregateProject
  }
}
  

// Types for ProjectEdge

type ProjectEdgeObject =
  | ProjectEdgeFields
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'cursor', args?: [] | false, alias?: string  } 

type ProjectEdgeFields =
  | 'node'
  | 'cursor'



  

export interface ProjectEdgeFieldDetails {
  node: {
    type: 'Project'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"ProjectEdge">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Project> | prisma.Project
  }
  cursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for AggregateProject

type AggregateProjectObject =
  | AggregateProjectFields
  | { name: 'count', args?: [] | false, alias?: string  } 

type AggregateProjectFields =
  | 'count'



  

export interface AggregateProjectFieldDetails {
  count: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for SkillConnection

type SkillConnectionObject =
  | SkillConnectionFields
  | { name: 'pageInfo', args?: [] | false, alias?: string  } 
  | { name: 'edges', args?: [] | false, alias?: string  } 
  | { name: 'aggregate', args?: [] | false, alias?: string  } 

type SkillConnectionFields =
  | 'pageInfo'
  | 'edges'
  | 'aggregate'



  

export interface SkillConnectionFieldDetails {
  pageInfo: {
    type: 'PageInfo'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"SkillConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PageInfo> | prisma.PageInfo
  }
  edges: {
    type: 'SkillEdge'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"SkillConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.SkillEdge[]> | prisma.SkillEdge[]
  }
  aggregate: {
    type: 'AggregateSkill'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"SkillConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AggregateSkill> | prisma.AggregateSkill
  }
}
  

// Types for SkillEdge

type SkillEdgeObject =
  | SkillEdgeFields
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'cursor', args?: [] | false, alias?: string  } 

type SkillEdgeFields =
  | 'node'
  | 'cursor'



  

export interface SkillEdgeFieldDetails {
  node: {
    type: 'Skill'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"SkillEdge">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Skill> | prisma.Skill
  }
  cursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for AggregateSkill

type AggregateSkillObject =
  | AggregateSkillFields
  | { name: 'count', args?: [] | false, alias?: string  } 

type AggregateSkillFields =
  | 'count'



  

export interface AggregateSkillFieldDetails {
  count: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for Mutation

type MutationObject =
  | MutationFields
  | { name: 'createUser', args?: MutationCreateUserArgs[] | false, alias?: string  } 
  | { name: 'updateUser', args?: MutationUpdateUserArgs[] | false, alias?: string  } 
  | { name: 'updateManyUsers', args?: MutationUpdateManyUsersArgs[] | false, alias?: string  } 
  | { name: 'upsertUser', args?: MutationUpsertUserArgs[] | false, alias?: string  } 
  | { name: 'deleteUser', args?: MutationDeleteUserArgs[] | false, alias?: string  } 
  | { name: 'deleteManyUsers', args?: MutationDeleteManyUsersArgs[] | false, alias?: string  } 
  | { name: 'createProject', args?: MutationCreateProjectArgs[] | false, alias?: string  } 
  | { name: 'updateProject', args?: MutationUpdateProjectArgs[] | false, alias?: string  } 
  | { name: 'updateManyProjects', args?: MutationUpdateManyProjectsArgs[] | false, alias?: string  } 
  | { name: 'upsertProject', args?: MutationUpsertProjectArgs[] | false, alias?: string  } 
  | { name: 'deleteProject', args?: MutationDeleteProjectArgs[] | false, alias?: string  } 
  | { name: 'deleteManyProjects', args?: MutationDeleteManyProjectsArgs[] | false, alias?: string  } 
  | { name: 'createSkill', args?: MutationCreateSkillArgs[] | false, alias?: string  } 
  | { name: 'updateSkill', args?: MutationUpdateSkillArgs[] | false, alias?: string  } 
  | { name: 'updateManySkills', args?: MutationUpdateManySkillsArgs[] | false, alias?: string  } 
  | { name: 'upsertSkill', args?: MutationUpsertSkillArgs[] | false, alias?: string  } 
  | { name: 'deleteSkill', args?: MutationDeleteSkillArgs[] | false, alias?: string  } 
  | { name: 'deleteManySkills', args?: MutationDeleteManySkillsArgs[] | false, alias?: string  } 

type MutationFields =
  | 'createUser'
  | 'updateUser'
  | 'updateManyUsers'
  | 'upsertUser'
  | 'deleteUser'
  | 'deleteManyUsers'
  | 'createProject'
  | 'updateProject'
  | 'updateManyProjects'
  | 'upsertProject'
  | 'deleteProject'
  | 'deleteManyProjects'
  | 'createSkill'
  | 'updateSkill'
  | 'updateManySkills'
  | 'upsertSkill'
  | 'deleteSkill'
  | 'deleteManySkills'


type MutationCreateUserArgs =
  | 'data'
type MutationUpdateUserArgs =
  | 'data'
  | 'where'
type MutationUpdateManyUsersArgs =
  | 'data'
  | 'where'
type MutationUpsertUserArgs =
  | 'where'
  | 'create'
  | 'update'
type MutationDeleteUserArgs =
  | 'where'
type MutationDeleteManyUsersArgs =
  | 'where'
type MutationCreateProjectArgs =
  | 'data'
type MutationUpdateProjectArgs =
  | 'data'
  | 'where'
type MutationUpdateManyProjectsArgs =
  | 'data'
  | 'where'
type MutationUpsertProjectArgs =
  | 'where'
  | 'create'
  | 'update'
type MutationDeleteProjectArgs =
  | 'where'
type MutationDeleteManyProjectsArgs =
  | 'where'
type MutationCreateSkillArgs =
  | 'data'
type MutationUpdateSkillArgs =
  | 'data'
  | 'where'
type MutationUpdateManySkillsArgs =
  | 'data'
  | 'where'
type MutationUpsertSkillArgs =
  | 'where'
  | 'create'
  | 'update'
type MutationDeleteSkillArgs =
  | 'where'
type MutationDeleteManySkillsArgs =
  | 'where'
  

export interface MutationFieldDetails {
  createUser: {
    type: 'User'
    args: Record<MutationCreateUserArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: UserCreateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.User> | prisma.User
  }
  updateUser: {
    type: 'User'
    args: Record<MutationUpdateUserArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: UserUpdateInput, where: UserWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.User | null> | prisma.User | null
  }
  updateManyUsers: {
    type: 'BatchPayload'
    args: Record<MutationUpdateManyUsersArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: UserUpdateManyMutationInput, where?: UserWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  upsertUser: {
    type: 'User'
    args: Record<MutationUpsertUserArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: UserWhereUniqueInput, create: UserCreateInput, update: UserUpdateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.User> | prisma.User
  }
  deleteUser: {
    type: 'User'
    args: Record<MutationDeleteUserArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: UserWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.User | null> | prisma.User | null
  }
  deleteManyUsers: {
    type: 'BatchPayload'
    args: Record<MutationDeleteManyUsersArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where?: UserWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  createProject: {
    type: 'Project'
    args: Record<MutationCreateProjectArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: ProjectCreateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Project> | prisma.Project
  }
  updateProject: {
    type: 'Project'
    args: Record<MutationUpdateProjectArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: ProjectUpdateInput, where: ProjectWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Project | null> | prisma.Project | null
  }
  updateManyProjects: {
    type: 'BatchPayload'
    args: Record<MutationUpdateManyProjectsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: ProjectUpdateManyMutationInput, where?: ProjectWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  upsertProject: {
    type: 'Project'
    args: Record<MutationUpsertProjectArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: ProjectWhereUniqueInput, create: ProjectCreateInput, update: ProjectUpdateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Project> | prisma.Project
  }
  deleteProject: {
    type: 'Project'
    args: Record<MutationDeleteProjectArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: ProjectWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Project | null> | prisma.Project | null
  }
  deleteManyProjects: {
    type: 'BatchPayload'
    args: Record<MutationDeleteManyProjectsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where?: ProjectWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  createSkill: {
    type: 'Skill'
    args: Record<MutationCreateSkillArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: SkillCreateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Skill> | prisma.Skill
  }
  updateSkill: {
    type: 'Skill'
    args: Record<MutationUpdateSkillArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: SkillUpdateInput, where: SkillWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Skill | null> | prisma.Skill | null
  }
  updateManySkills: {
    type: 'BatchPayload'
    args: Record<MutationUpdateManySkillsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: SkillUpdateManyMutationInput, where?: SkillWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  upsertSkill: {
    type: 'Skill'
    args: Record<MutationUpsertSkillArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: SkillWhereUniqueInput, create: SkillCreateInput, update: SkillUpdateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Skill> | prisma.Skill
  }
  deleteSkill: {
    type: 'Skill'
    args: Record<MutationDeleteSkillArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: SkillWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Skill | null> | prisma.Skill | null
  }
  deleteManySkills: {
    type: 'BatchPayload'
    args: Record<MutationDeleteManySkillsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where?: SkillWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
}
  

// Types for BatchPayload

type BatchPayloadObject =
  | BatchPayloadFields
  | { name: 'count', args?: [] | false, alias?: string  } 

type BatchPayloadFields =
  | 'count'



  

export interface BatchPayloadFieldDetails {
  count: {
    type: 'Long'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for Subscription

type SubscriptionObject =
  | SubscriptionFields
  | { name: 'user', args?: SubscriptionUserArgs[] | false, alias?: string  } 
  | { name: 'project', args?: SubscriptionProjectArgs[] | false, alias?: string  } 
  | { name: 'skill', args?: SubscriptionSkillArgs[] | false, alias?: string  } 

type SubscriptionFields =
  | 'user'
  | 'project'
  | 'skill'


type SubscriptionUserArgs =
  | 'where'
type SubscriptionProjectArgs =
  | 'where'
type SubscriptionSkillArgs =
  | 'where'
  

export interface SubscriptionFieldDetails {
  user: {
    type: 'UserSubscriptionPayload'
    args: Record<SubscriptionUserArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Subscription">,
      args: { where?: UserSubscriptionWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.UserSubscriptionPayload | null> | prisma.UserSubscriptionPayload | null
  }
  project: {
    type: 'ProjectSubscriptionPayload'
    args: Record<SubscriptionProjectArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Subscription">,
      args: { where?: ProjectSubscriptionWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.ProjectSubscriptionPayload | null> | prisma.ProjectSubscriptionPayload | null
  }
  skill: {
    type: 'SkillSubscriptionPayload'
    args: Record<SubscriptionSkillArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Subscription">,
      args: { where?: SkillSubscriptionWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.SkillSubscriptionPayload | null> | prisma.SkillSubscriptionPayload | null
  }
}
  

// Types for UserSubscriptionPayload

type UserSubscriptionPayloadObject =
  | UserSubscriptionPayloadFields
  | { name: 'mutation', args?: [] | false, alias?: string  } 
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'updatedFields', args?: [] | false, alias?: string  } 
  | { name: 'previousValues', args?: [] | false, alias?: string  } 

type UserSubscriptionPayloadFields =
  | 'mutation'
  | 'node'
  | 'updatedFields'
  | 'previousValues'



  

export interface UserSubscriptionPayloadFieldDetails {
  mutation: {
    type: 'MutationType'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"UserSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MutationType> | prisma.MutationType
  }
  node: {
    type: 'User'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"UserSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.User | null> | prisma.User | null
  }
  updatedFields: {
    type: 'String'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: undefined
  }
  previousValues: {
    type: 'UserPreviousValues'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"UserSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.UserPreviousValues | null> | prisma.UserPreviousValues | null
  }
}
  

// Types for UserPreviousValues

type UserPreviousValuesObject =
  | UserPreviousValuesFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'createdAt', args?: [] | false, alias?: string  } 
  | { name: 'updatedAt', args?: [] | false, alias?: string  } 
  | { name: 'email', args?: [] | false, alias?: string  } 
  | { name: 'name', args?: [] | false, alias?: string  } 
  | { name: 'auth0UserId', args?: [] | false, alias?: string  } 
  | { name: 'picture', args?: [] | false, alias?: string  } 
  | { name: 'githubName', args?: [] | false, alias?: string  } 
  | { name: 'flowdockName', args?: [] | false, alias?: string  } 
  | { name: 'description', args?: [] | false, alias?: string  } 
  | { name: 'hasCompletedWizard', args?: [] | false, alias?: string  } 
  | { name: 'role', args?: [] | false, alias?: string  } 

type UserPreviousValuesFields =
  | 'id'
  | 'createdAt'
  | 'updatedAt'
  | 'email'
  | 'name'
  | 'auth0UserId'
  | 'picture'
  | 'githubName'
  | 'flowdockName'
  | 'description'
  | 'hasCompletedWizard'
  | 'role'



  

export interface UserPreviousValuesFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  createdAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  updatedAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  email: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  name: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  auth0UserId: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  picture: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  githubName: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  flowdockName: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  description: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  hasCompletedWizard: {
    type: 'Boolean'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  role: {
    type: 'UserRole'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"UserPreviousValues">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.UserRole | null> | prisma.UserRole | null
  }
}
  

// Types for ProjectSubscriptionPayload

type ProjectSubscriptionPayloadObject =
  | ProjectSubscriptionPayloadFields
  | { name: 'mutation', args?: [] | false, alias?: string  } 
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'updatedFields', args?: [] | false, alias?: string  } 
  | { name: 'previousValues', args?: [] | false, alias?: string  } 

type ProjectSubscriptionPayloadFields =
  | 'mutation'
  | 'node'
  | 'updatedFields'
  | 'previousValues'



  

export interface ProjectSubscriptionPayloadFieldDetails {
  mutation: {
    type: 'MutationType'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"ProjectSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MutationType> | prisma.MutationType
  }
  node: {
    type: 'Project'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"ProjectSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Project | null> | prisma.Project | null
  }
  updatedFields: {
    type: 'String'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: undefined
  }
  previousValues: {
    type: 'ProjectPreviousValues'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"ProjectSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.ProjectPreviousValues | null> | prisma.ProjectPreviousValues | null
  }
}
  

// Types for ProjectPreviousValues

type ProjectPreviousValuesObject =
  | ProjectPreviousValuesFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'createdAt', args?: [] | false, alias?: string  } 
  | { name: 'updatedAt', args?: [] | false, alias?: string  } 
  | { name: 'name', args?: [] | false, alias?: string  } 
  | { name: 'headerImage', args?: [] | false, alias?: string  } 
  | { name: 'status', args?: [] | false, alias?: string  } 
  | { name: 'description', args?: [] | false, alias?: string  } 
  | { name: 'cfapiProjectId', args?: [] | false, alias?: string  } 
  | { name: 'repoName', args?: [] | false, alias?: string  } 

type ProjectPreviousValuesFields =
  | 'id'
  | 'createdAt'
  | 'updatedAt'
  | 'name'
  | 'headerImage'
  | 'status'
  | 'description'
  | 'cfapiProjectId'
  | 'repoName'



  

export interface ProjectPreviousValuesFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  createdAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  updatedAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  name: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  headerImage: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  status: {
    type: 'ProjectStatus'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"ProjectPreviousValues">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.ProjectStatus | null> | prisma.ProjectStatus | null
  }
  description: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  cfapiProjectId: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  repoName: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
}
  

// Types for SkillSubscriptionPayload

type SkillSubscriptionPayloadObject =
  | SkillSubscriptionPayloadFields
  | { name: 'mutation', args?: [] | false, alias?: string  } 
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'updatedFields', args?: [] | false, alias?: string  } 
  | { name: 'previousValues', args?: [] | false, alias?: string  } 

type SkillSubscriptionPayloadFields =
  | 'mutation'
  | 'node'
  | 'updatedFields'
  | 'previousValues'



  

export interface SkillSubscriptionPayloadFieldDetails {
  mutation: {
    type: 'MutationType'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"SkillSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MutationType> | prisma.MutationType
  }
  node: {
    type: 'Skill'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"SkillSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Skill | null> | prisma.Skill | null
  }
  updatedFields: {
    type: 'String'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: undefined
  }
  previousValues: {
    type: 'SkillPreviousValues'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"SkillSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.SkillPreviousValues | null> | prisma.SkillPreviousValues | null
  }
}
  

// Types for SkillPreviousValues

type SkillPreviousValuesObject =
  | SkillPreviousValuesFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'createdAt', args?: [] | false, alias?: string  } 
  | { name: 'updatedAt', args?: [] | false, alias?: string  } 
  | { name: 'name', args?: [] | false, alias?: string  } 

type SkillPreviousValuesFields =
  | 'id'
  | 'createdAt'
  | 'updatedAt'
  | 'name'



  

export interface SkillPreviousValuesFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  createdAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  updatedAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  name: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  


export interface UserWhereUniqueInput {
  id?: string | null
  email?: string | null
  auth0UserId?: string | null
}
export type UserWhereUniqueInputInputObject =
  | Extract<keyof UserWhereUniqueInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'auth0UserId', alias?: string  } 
  
export interface ProjectWhereInput {
  id?: string | null
  id_not?: string | null
  id_in?: string[]
  id_not_in?: string[]
  id_lt?: string | null
  id_lte?: string | null
  id_gt?: string | null
  id_gte?: string | null
  id_contains?: string | null
  id_not_contains?: string | null
  id_starts_with?: string | null
  id_not_starts_with?: string | null
  id_ends_with?: string | null
  id_not_ends_with?: string | null
  createdAt?: string | null
  createdAt_not?: string | null
  createdAt_in?: string[]
  createdAt_not_in?: string[]
  createdAt_lt?: string | null
  createdAt_lte?: string | null
  createdAt_gt?: string | null
  createdAt_gte?: string | null
  updatedAt?: string | null
  updatedAt_not?: string | null
  updatedAt_in?: string[]
  updatedAt_not_in?: string[]
  updatedAt_lt?: string | null
  updatedAt_lte?: string | null
  updatedAt_gt?: string | null
  updatedAt_gte?: string | null
  name?: string | null
  name_not?: string | null
  name_in?: string[]
  name_not_in?: string[]
  name_lt?: string | null
  name_lte?: string | null
  name_gt?: string | null
  name_gte?: string | null
  name_contains?: string | null
  name_not_contains?: string | null
  name_starts_with?: string | null
  name_not_starts_with?: string | null
  name_ends_with?: string | null
  name_not_ends_with?: string | null
  headerImage?: string | null
  headerImage_not?: string | null
  headerImage_in?: string[]
  headerImage_not_in?: string[]
  headerImage_lt?: string | null
  headerImage_lte?: string | null
  headerImage_gt?: string | null
  headerImage_gte?: string | null
  headerImage_contains?: string | null
  headerImage_not_contains?: string | null
  headerImage_starts_with?: string | null
  headerImage_not_starts_with?: string | null
  headerImage_ends_with?: string | null
  headerImage_not_ends_with?: string | null
  status?: prisma.ProjectStatus | null
  status_not?: prisma.ProjectStatus | null
  status_in?: prisma.ProjectStatus[]
  status_not_in?: prisma.ProjectStatus[]
  description?: string | null
  description_not?: string | null
  description_in?: string[]
  description_not_in?: string[]
  description_lt?: string | null
  description_lte?: string | null
  description_gt?: string | null
  description_gte?: string | null
  description_contains?: string | null
  description_not_contains?: string | null
  description_starts_with?: string | null
  description_not_starts_with?: string | null
  description_ends_with?: string | null
  description_not_ends_with?: string | null
  cfapiProjectId?: string | null
  cfapiProjectId_not?: string | null
  cfapiProjectId_in?: string[]
  cfapiProjectId_not_in?: string[]
  cfapiProjectId_lt?: string | null
  cfapiProjectId_lte?: string | null
  cfapiProjectId_gt?: string | null
  cfapiProjectId_gte?: string | null
  cfapiProjectId_contains?: string | null
  cfapiProjectId_not_contains?: string | null
  cfapiProjectId_starts_with?: string | null
  cfapiProjectId_not_starts_with?: string | null
  cfapiProjectId_ends_with?: string | null
  cfapiProjectId_not_ends_with?: string | null
  repoName?: string | null
  repoName_not?: string | null
  repoName_in?: string[]
  repoName_not_in?: string[]
  repoName_lt?: string | null
  repoName_lte?: string | null
  repoName_gt?: string | null
  repoName_gte?: string | null
  repoName_contains?: string | null
  repoName_not_contains?: string | null
  repoName_starts_with?: string | null
  repoName_not_starts_with?: string | null
  repoName_ends_with?: string | null
  repoName_not_ends_with?: string | null
  champions_every?: UserWhereInput | null
  champions_some?: UserWhereInput | null
  champions_none?: UserWhereInput | null
  skills_every?: SkillWhereInput | null
  skills_some?: SkillWhereInput | null
  skills_none?: SkillWhereInput | null
  AND?: ProjectWhereInput[]
  OR?: ProjectWhereInput[]
  NOT?: ProjectWhereInput[]
}
export type ProjectWhereInputInputObject =
  | Extract<keyof ProjectWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'id_contains', alias?: string  } 
  | { name: 'id_not_contains', alias?: string  } 
  | { name: 'id_starts_with', alias?: string  } 
  | { name: 'id_not_starts_with', alias?: string  } 
  | { name: 'id_ends_with', alias?: string  } 
  | { name: 'id_not_ends_with', alias?: string  } 
  | { name: 'createdAt', alias?: string  } 
  | { name: 'createdAt_not', alias?: string  } 
  | { name: 'createdAt_in', alias?: string  } 
  | { name: 'createdAt_not_in', alias?: string  } 
  | { name: 'createdAt_lt', alias?: string  } 
  | { name: 'createdAt_lte', alias?: string  } 
  | { name: 'createdAt_gt', alias?: string  } 
  | { name: 'createdAt_gte', alias?: string  } 
  | { name: 'updatedAt', alias?: string  } 
  | { name: 'updatedAt_not', alias?: string  } 
  | { name: 'updatedAt_in', alias?: string  } 
  | { name: 'updatedAt_not_in', alias?: string  } 
  | { name: 'updatedAt_lt', alias?: string  } 
  | { name: 'updatedAt_lte', alias?: string  } 
  | { name: 'updatedAt_gt', alias?: string  } 
  | { name: 'updatedAt_gte', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'name_not', alias?: string  } 
  | { name: 'name_in', alias?: string  } 
  | { name: 'name_not_in', alias?: string  } 
  | { name: 'name_lt', alias?: string  } 
  | { name: 'name_lte', alias?: string  } 
  | { name: 'name_gt', alias?: string  } 
  | { name: 'name_gte', alias?: string  } 
  | { name: 'name_contains', alias?: string  } 
  | { name: 'name_not_contains', alias?: string  } 
  | { name: 'name_starts_with', alias?: string  } 
  | { name: 'name_not_starts_with', alias?: string  } 
  | { name: 'name_ends_with', alias?: string  } 
  | { name: 'name_not_ends_with', alias?: string  } 
  | { name: 'headerImage', alias?: string  } 
  | { name: 'headerImage_not', alias?: string  } 
  | { name: 'headerImage_in', alias?: string  } 
  | { name: 'headerImage_not_in', alias?: string  } 
  | { name: 'headerImage_lt', alias?: string  } 
  | { name: 'headerImage_lte', alias?: string  } 
  | { name: 'headerImage_gt', alias?: string  } 
  | { name: 'headerImage_gte', alias?: string  } 
  | { name: 'headerImage_contains', alias?: string  } 
  | { name: 'headerImage_not_contains', alias?: string  } 
  | { name: 'headerImage_starts_with', alias?: string  } 
  | { name: 'headerImage_not_starts_with', alias?: string  } 
  | { name: 'headerImage_ends_with', alias?: string  } 
  | { name: 'headerImage_not_ends_with', alias?: string  } 
  | { name: 'status', alias?: string  } 
  | { name: 'status_not', alias?: string  } 
  | { name: 'status_in', alias?: string  } 
  | { name: 'status_not_in', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'description_not', alias?: string  } 
  | { name: 'description_in', alias?: string  } 
  | { name: 'description_not_in', alias?: string  } 
  | { name: 'description_lt', alias?: string  } 
  | { name: 'description_lte', alias?: string  } 
  | { name: 'description_gt', alias?: string  } 
  | { name: 'description_gte', alias?: string  } 
  | { name: 'description_contains', alias?: string  } 
  | { name: 'description_not_contains', alias?: string  } 
  | { name: 'description_starts_with', alias?: string  } 
  | { name: 'description_not_starts_with', alias?: string  } 
  | { name: 'description_ends_with', alias?: string  } 
  | { name: 'description_not_ends_with', alias?: string  } 
  | { name: 'cfapiProjectId', alias?: string  } 
  | { name: 'cfapiProjectId_not', alias?: string  } 
  | { name: 'cfapiProjectId_in', alias?: string  } 
  | { name: 'cfapiProjectId_not_in', alias?: string  } 
  | { name: 'cfapiProjectId_lt', alias?: string  } 
  | { name: 'cfapiProjectId_lte', alias?: string  } 
  | { name: 'cfapiProjectId_gt', alias?: string  } 
  | { name: 'cfapiProjectId_gte', alias?: string  } 
  | { name: 'cfapiProjectId_contains', alias?: string  } 
  | { name: 'cfapiProjectId_not_contains', alias?: string  } 
  | { name: 'cfapiProjectId_starts_with', alias?: string  } 
  | { name: 'cfapiProjectId_not_starts_with', alias?: string  } 
  | { name: 'cfapiProjectId_ends_with', alias?: string  } 
  | { name: 'cfapiProjectId_not_ends_with', alias?: string  } 
  | { name: 'repoName', alias?: string  } 
  | { name: 'repoName_not', alias?: string  } 
  | { name: 'repoName_in', alias?: string  } 
  | { name: 'repoName_not_in', alias?: string  } 
  | { name: 'repoName_lt', alias?: string  } 
  | { name: 'repoName_lte', alias?: string  } 
  | { name: 'repoName_gt', alias?: string  } 
  | { name: 'repoName_gte', alias?: string  } 
  | { name: 'repoName_contains', alias?: string  } 
  | { name: 'repoName_not_contains', alias?: string  } 
  | { name: 'repoName_starts_with', alias?: string  } 
  | { name: 'repoName_not_starts_with', alias?: string  } 
  | { name: 'repoName_ends_with', alias?: string  } 
  | { name: 'repoName_not_ends_with', alias?: string  } 
  | { name: 'champions_every', alias?: string  } 
  | { name: 'champions_some', alias?: string  } 
  | { name: 'champions_none', alias?: string  } 
  | { name: 'skills_every', alias?: string  } 
  | { name: 'skills_some', alias?: string  } 
  | { name: 'skills_none', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface UserWhereInput {
  id?: string | null
  id_not?: string | null
  id_in?: string[]
  id_not_in?: string[]
  id_lt?: string | null
  id_lte?: string | null
  id_gt?: string | null
  id_gte?: string | null
  id_contains?: string | null
  id_not_contains?: string | null
  id_starts_with?: string | null
  id_not_starts_with?: string | null
  id_ends_with?: string | null
  id_not_ends_with?: string | null
  createdAt?: string | null
  createdAt_not?: string | null
  createdAt_in?: string[]
  createdAt_not_in?: string[]
  createdAt_lt?: string | null
  createdAt_lte?: string | null
  createdAt_gt?: string | null
  createdAt_gte?: string | null
  updatedAt?: string | null
  updatedAt_not?: string | null
  updatedAt_in?: string[]
  updatedAt_not_in?: string[]
  updatedAt_lt?: string | null
  updatedAt_lte?: string | null
  updatedAt_gt?: string | null
  updatedAt_gte?: string | null
  email?: string | null
  email_not?: string | null
  email_in?: string[]
  email_not_in?: string[]
  email_lt?: string | null
  email_lte?: string | null
  email_gt?: string | null
  email_gte?: string | null
  email_contains?: string | null
  email_not_contains?: string | null
  email_starts_with?: string | null
  email_not_starts_with?: string | null
  email_ends_with?: string | null
  email_not_ends_with?: string | null
  name?: string | null
  name_not?: string | null
  name_in?: string[]
  name_not_in?: string[]
  name_lt?: string | null
  name_lte?: string | null
  name_gt?: string | null
  name_gte?: string | null
  name_contains?: string | null
  name_not_contains?: string | null
  name_starts_with?: string | null
  name_not_starts_with?: string | null
  name_ends_with?: string | null
  name_not_ends_with?: string | null
  auth0UserId?: string | null
  auth0UserId_not?: string | null
  auth0UserId_in?: string[]
  auth0UserId_not_in?: string[]
  auth0UserId_lt?: string | null
  auth0UserId_lte?: string | null
  auth0UserId_gt?: string | null
  auth0UserId_gte?: string | null
  auth0UserId_contains?: string | null
  auth0UserId_not_contains?: string | null
  auth0UserId_starts_with?: string | null
  auth0UserId_not_starts_with?: string | null
  auth0UserId_ends_with?: string | null
  auth0UserId_not_ends_with?: string | null
  picture?: string | null
  picture_not?: string | null
  picture_in?: string[]
  picture_not_in?: string[]
  picture_lt?: string | null
  picture_lte?: string | null
  picture_gt?: string | null
  picture_gte?: string | null
  picture_contains?: string | null
  picture_not_contains?: string | null
  picture_starts_with?: string | null
  picture_not_starts_with?: string | null
  picture_ends_with?: string | null
  picture_not_ends_with?: string | null
  githubName?: string | null
  githubName_not?: string | null
  githubName_in?: string[]
  githubName_not_in?: string[]
  githubName_lt?: string | null
  githubName_lte?: string | null
  githubName_gt?: string | null
  githubName_gte?: string | null
  githubName_contains?: string | null
  githubName_not_contains?: string | null
  githubName_starts_with?: string | null
  githubName_not_starts_with?: string | null
  githubName_ends_with?: string | null
  githubName_not_ends_with?: string | null
  flowdockName?: string | null
  flowdockName_not?: string | null
  flowdockName_in?: string[]
  flowdockName_not_in?: string[]
  flowdockName_lt?: string | null
  flowdockName_lte?: string | null
  flowdockName_gt?: string | null
  flowdockName_gte?: string | null
  flowdockName_contains?: string | null
  flowdockName_not_contains?: string | null
  flowdockName_starts_with?: string | null
  flowdockName_not_starts_with?: string | null
  flowdockName_ends_with?: string | null
  flowdockName_not_ends_with?: string | null
  description?: string | null
  description_not?: string | null
  description_in?: string[]
  description_not_in?: string[]
  description_lt?: string | null
  description_lte?: string | null
  description_gt?: string | null
  description_gte?: string | null
  description_contains?: string | null
  description_not_contains?: string | null
  description_starts_with?: string | null
  description_not_starts_with?: string | null
  description_ends_with?: string | null
  description_not_ends_with?: string | null
  hasCompletedWizard?: boolean | null
  hasCompletedWizard_not?: boolean | null
  role?: prisma.UserRole | null
  role_not?: prisma.UserRole | null
  role_in?: prisma.UserRole[]
  role_not_in?: prisma.UserRole[]
  projectsChampioned_every?: ProjectWhereInput | null
  projectsChampioned_some?: ProjectWhereInput | null
  projectsChampioned_none?: ProjectWhereInput | null
  skills_every?: SkillWhereInput | null
  skills_some?: SkillWhereInput | null
  skills_none?: SkillWhereInput | null
  AND?: UserWhereInput[]
  OR?: UserWhereInput[]
  NOT?: UserWhereInput[]
}
export type UserWhereInputInputObject =
  | Extract<keyof UserWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'id_contains', alias?: string  } 
  | { name: 'id_not_contains', alias?: string  } 
  | { name: 'id_starts_with', alias?: string  } 
  | { name: 'id_not_starts_with', alias?: string  } 
  | { name: 'id_ends_with', alias?: string  } 
  | { name: 'id_not_ends_with', alias?: string  } 
  | { name: 'createdAt', alias?: string  } 
  | { name: 'createdAt_not', alias?: string  } 
  | { name: 'createdAt_in', alias?: string  } 
  | { name: 'createdAt_not_in', alias?: string  } 
  | { name: 'createdAt_lt', alias?: string  } 
  | { name: 'createdAt_lte', alias?: string  } 
  | { name: 'createdAt_gt', alias?: string  } 
  | { name: 'createdAt_gte', alias?: string  } 
  | { name: 'updatedAt', alias?: string  } 
  | { name: 'updatedAt_not', alias?: string  } 
  | { name: 'updatedAt_in', alias?: string  } 
  | { name: 'updatedAt_not_in', alias?: string  } 
  | { name: 'updatedAt_lt', alias?: string  } 
  | { name: 'updatedAt_lte', alias?: string  } 
  | { name: 'updatedAt_gt', alias?: string  } 
  | { name: 'updatedAt_gte', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'email_not', alias?: string  } 
  | { name: 'email_in', alias?: string  } 
  | { name: 'email_not_in', alias?: string  } 
  | { name: 'email_lt', alias?: string  } 
  | { name: 'email_lte', alias?: string  } 
  | { name: 'email_gt', alias?: string  } 
  | { name: 'email_gte', alias?: string  } 
  | { name: 'email_contains', alias?: string  } 
  | { name: 'email_not_contains', alias?: string  } 
  | { name: 'email_starts_with', alias?: string  } 
  | { name: 'email_not_starts_with', alias?: string  } 
  | { name: 'email_ends_with', alias?: string  } 
  | { name: 'email_not_ends_with', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'name_not', alias?: string  } 
  | { name: 'name_in', alias?: string  } 
  | { name: 'name_not_in', alias?: string  } 
  | { name: 'name_lt', alias?: string  } 
  | { name: 'name_lte', alias?: string  } 
  | { name: 'name_gt', alias?: string  } 
  | { name: 'name_gte', alias?: string  } 
  | { name: 'name_contains', alias?: string  } 
  | { name: 'name_not_contains', alias?: string  } 
  | { name: 'name_starts_with', alias?: string  } 
  | { name: 'name_not_starts_with', alias?: string  } 
  | { name: 'name_ends_with', alias?: string  } 
  | { name: 'name_not_ends_with', alias?: string  } 
  | { name: 'auth0UserId', alias?: string  } 
  | { name: 'auth0UserId_not', alias?: string  } 
  | { name: 'auth0UserId_in', alias?: string  } 
  | { name: 'auth0UserId_not_in', alias?: string  } 
  | { name: 'auth0UserId_lt', alias?: string  } 
  | { name: 'auth0UserId_lte', alias?: string  } 
  | { name: 'auth0UserId_gt', alias?: string  } 
  | { name: 'auth0UserId_gte', alias?: string  } 
  | { name: 'auth0UserId_contains', alias?: string  } 
  | { name: 'auth0UserId_not_contains', alias?: string  } 
  | { name: 'auth0UserId_starts_with', alias?: string  } 
  | { name: 'auth0UserId_not_starts_with', alias?: string  } 
  | { name: 'auth0UserId_ends_with', alias?: string  } 
  | { name: 'auth0UserId_not_ends_with', alias?: string  } 
  | { name: 'picture', alias?: string  } 
  | { name: 'picture_not', alias?: string  } 
  | { name: 'picture_in', alias?: string  } 
  | { name: 'picture_not_in', alias?: string  } 
  | { name: 'picture_lt', alias?: string  } 
  | { name: 'picture_lte', alias?: string  } 
  | { name: 'picture_gt', alias?: string  } 
  | { name: 'picture_gte', alias?: string  } 
  | { name: 'picture_contains', alias?: string  } 
  | { name: 'picture_not_contains', alias?: string  } 
  | { name: 'picture_starts_with', alias?: string  } 
  | { name: 'picture_not_starts_with', alias?: string  } 
  | { name: 'picture_ends_with', alias?: string  } 
  | { name: 'picture_not_ends_with', alias?: string  } 
  | { name: 'githubName', alias?: string  } 
  | { name: 'githubName_not', alias?: string  } 
  | { name: 'githubName_in', alias?: string  } 
  | { name: 'githubName_not_in', alias?: string  } 
  | { name: 'githubName_lt', alias?: string  } 
  | { name: 'githubName_lte', alias?: string  } 
  | { name: 'githubName_gt', alias?: string  } 
  | { name: 'githubName_gte', alias?: string  } 
  | { name: 'githubName_contains', alias?: string  } 
  | { name: 'githubName_not_contains', alias?: string  } 
  | { name: 'githubName_starts_with', alias?: string  } 
  | { name: 'githubName_not_starts_with', alias?: string  } 
  | { name: 'githubName_ends_with', alias?: string  } 
  | { name: 'githubName_not_ends_with', alias?: string  } 
  | { name: 'flowdockName', alias?: string  } 
  | { name: 'flowdockName_not', alias?: string  } 
  | { name: 'flowdockName_in', alias?: string  } 
  | { name: 'flowdockName_not_in', alias?: string  } 
  | { name: 'flowdockName_lt', alias?: string  } 
  | { name: 'flowdockName_lte', alias?: string  } 
  | { name: 'flowdockName_gt', alias?: string  } 
  | { name: 'flowdockName_gte', alias?: string  } 
  | { name: 'flowdockName_contains', alias?: string  } 
  | { name: 'flowdockName_not_contains', alias?: string  } 
  | { name: 'flowdockName_starts_with', alias?: string  } 
  | { name: 'flowdockName_not_starts_with', alias?: string  } 
  | { name: 'flowdockName_ends_with', alias?: string  } 
  | { name: 'flowdockName_not_ends_with', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'description_not', alias?: string  } 
  | { name: 'description_in', alias?: string  } 
  | { name: 'description_not_in', alias?: string  } 
  | { name: 'description_lt', alias?: string  } 
  | { name: 'description_lte', alias?: string  } 
  | { name: 'description_gt', alias?: string  } 
  | { name: 'description_gte', alias?: string  } 
  | { name: 'description_contains', alias?: string  } 
  | { name: 'description_not_contains', alias?: string  } 
  | { name: 'description_starts_with', alias?: string  } 
  | { name: 'description_not_starts_with', alias?: string  } 
  | { name: 'description_ends_with', alias?: string  } 
  | { name: 'description_not_ends_with', alias?: string  } 
  | { name: 'hasCompletedWizard', alias?: string  } 
  | { name: 'hasCompletedWizard_not', alias?: string  } 
  | { name: 'role', alias?: string  } 
  | { name: 'role_not', alias?: string  } 
  | { name: 'role_in', alias?: string  } 
  | { name: 'role_not_in', alias?: string  } 
  | { name: 'projectsChampioned_every', alias?: string  } 
  | { name: 'projectsChampioned_some', alias?: string  } 
  | { name: 'projectsChampioned_none', alias?: string  } 
  | { name: 'skills_every', alias?: string  } 
  | { name: 'skills_some', alias?: string  } 
  | { name: 'skills_none', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface SkillWhereInput {
  id?: string | null
  id_not?: string | null
  id_in?: string[]
  id_not_in?: string[]
  id_lt?: string | null
  id_lte?: string | null
  id_gt?: string | null
  id_gte?: string | null
  id_contains?: string | null
  id_not_contains?: string | null
  id_starts_with?: string | null
  id_not_starts_with?: string | null
  id_ends_with?: string | null
  id_not_ends_with?: string | null
  createdAt?: string | null
  createdAt_not?: string | null
  createdAt_in?: string[]
  createdAt_not_in?: string[]
  createdAt_lt?: string | null
  createdAt_lte?: string | null
  createdAt_gt?: string | null
  createdAt_gte?: string | null
  updatedAt?: string | null
  updatedAt_not?: string | null
  updatedAt_in?: string[]
  updatedAt_not_in?: string[]
  updatedAt_lt?: string | null
  updatedAt_lte?: string | null
  updatedAt_gt?: string | null
  updatedAt_gte?: string | null
  name?: string | null
  name_not?: string | null
  name_in?: string[]
  name_not_in?: string[]
  name_lt?: string | null
  name_lte?: string | null
  name_gt?: string | null
  name_gte?: string | null
  name_contains?: string | null
  name_not_contains?: string | null
  name_starts_with?: string | null
  name_not_starts_with?: string | null
  name_ends_with?: string | null
  name_not_ends_with?: string | null
  usersWithSkill_every?: UserWhereInput | null
  usersWithSkill_some?: UserWhereInput | null
  usersWithSkill_none?: UserWhereInput | null
  projectsWithSkill_every?: ProjectWhereInput | null
  projectsWithSkill_some?: ProjectWhereInput | null
  projectsWithSkill_none?: ProjectWhereInput | null
  AND?: SkillWhereInput[]
  OR?: SkillWhereInput[]
  NOT?: SkillWhereInput[]
}
export type SkillWhereInputInputObject =
  | Extract<keyof SkillWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'id_contains', alias?: string  } 
  | { name: 'id_not_contains', alias?: string  } 
  | { name: 'id_starts_with', alias?: string  } 
  | { name: 'id_not_starts_with', alias?: string  } 
  | { name: 'id_ends_with', alias?: string  } 
  | { name: 'id_not_ends_with', alias?: string  } 
  | { name: 'createdAt', alias?: string  } 
  | { name: 'createdAt_not', alias?: string  } 
  | { name: 'createdAt_in', alias?: string  } 
  | { name: 'createdAt_not_in', alias?: string  } 
  | { name: 'createdAt_lt', alias?: string  } 
  | { name: 'createdAt_lte', alias?: string  } 
  | { name: 'createdAt_gt', alias?: string  } 
  | { name: 'createdAt_gte', alias?: string  } 
  | { name: 'updatedAt', alias?: string  } 
  | { name: 'updatedAt_not', alias?: string  } 
  | { name: 'updatedAt_in', alias?: string  } 
  | { name: 'updatedAt_not_in', alias?: string  } 
  | { name: 'updatedAt_lt', alias?: string  } 
  | { name: 'updatedAt_lte', alias?: string  } 
  | { name: 'updatedAt_gt', alias?: string  } 
  | { name: 'updatedAt_gte', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'name_not', alias?: string  } 
  | { name: 'name_in', alias?: string  } 
  | { name: 'name_not_in', alias?: string  } 
  | { name: 'name_lt', alias?: string  } 
  | { name: 'name_lte', alias?: string  } 
  | { name: 'name_gt', alias?: string  } 
  | { name: 'name_gte', alias?: string  } 
  | { name: 'name_contains', alias?: string  } 
  | { name: 'name_not_contains', alias?: string  } 
  | { name: 'name_starts_with', alias?: string  } 
  | { name: 'name_not_starts_with', alias?: string  } 
  | { name: 'name_ends_with', alias?: string  } 
  | { name: 'name_not_ends_with', alias?: string  } 
  | { name: 'usersWithSkill_every', alias?: string  } 
  | { name: 'usersWithSkill_some', alias?: string  } 
  | { name: 'usersWithSkill_none', alias?: string  } 
  | { name: 'projectsWithSkill_every', alias?: string  } 
  | { name: 'projectsWithSkill_some', alias?: string  } 
  | { name: 'projectsWithSkill_none', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface ProjectWhereUniqueInput {
  id?: string | null
  name?: string | null
  cfapiProjectId?: string | null
  repoName?: string | null
}
export type ProjectWhereUniqueInputInputObject =
  | Extract<keyof ProjectWhereUniqueInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'cfapiProjectId', alias?: string  } 
  | { name: 'repoName', alias?: string  } 
  
export interface SkillWhereUniqueInput {
  id?: string | null
  name?: string | null
}
export type SkillWhereUniqueInputInputObject =
  | Extract<keyof SkillWhereUniqueInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'name', alias?: string  } 
  
export interface UserCreateInput {
  email?: string
  name?: string | null
  auth0UserId?: string
  picture?: string | null
  githubName?: string | null
  flowdockName?: string | null
  description?: string | null
  hasCompletedWizard?: boolean | null
  role?: prisma.UserRole | null
  projectsChampioned?: ProjectCreateManyWithoutChampionsInput | null
  skills?: SkillCreateManyWithoutUsersWithSkillInput | null
}
export type UserCreateInputInputObject =
  | Extract<keyof UserCreateInput, string>
  | { name: 'email', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'auth0UserId', alias?: string  } 
  | { name: 'picture', alias?: string  } 
  | { name: 'githubName', alias?: string  } 
  | { name: 'flowdockName', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'hasCompletedWizard', alias?: string  } 
  | { name: 'role', alias?: string  } 
  | { name: 'projectsChampioned', alias?: string  } 
  | { name: 'skills', alias?: string  } 
  
export interface ProjectCreateManyWithoutChampionsInput {
  create?: ProjectCreateWithoutChampionsInput[]
  connect?: ProjectWhereUniqueInput[]
}
export type ProjectCreateManyWithoutChampionsInputInputObject =
  | Extract<keyof ProjectCreateManyWithoutChampionsInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface ProjectCreateWithoutChampionsInput {
  name?: string
  headerImage?: string | null
  status?: prisma.ProjectStatus | null
  description?: string | null
  cfapiProjectId?: string | null
  repoName?: string | null
  skills?: SkillCreateManyWithoutProjectsWithSkillInput | null
}
export type ProjectCreateWithoutChampionsInputInputObject =
  | Extract<keyof ProjectCreateWithoutChampionsInput, string>
  | { name: 'name', alias?: string  } 
  | { name: 'headerImage', alias?: string  } 
  | { name: 'status', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'cfapiProjectId', alias?: string  } 
  | { name: 'repoName', alias?: string  } 
  | { name: 'skills', alias?: string  } 
  
export interface SkillCreateManyWithoutProjectsWithSkillInput {
  create?: SkillCreateWithoutProjectsWithSkillInput[]
  connect?: SkillWhereUniqueInput[]
}
export type SkillCreateManyWithoutProjectsWithSkillInputInputObject =
  | Extract<keyof SkillCreateManyWithoutProjectsWithSkillInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface SkillCreateWithoutProjectsWithSkillInput {
  name?: string
  usersWithSkill?: UserCreateManyWithoutSkillsInput | null
}
export type SkillCreateWithoutProjectsWithSkillInputInputObject =
  | Extract<keyof SkillCreateWithoutProjectsWithSkillInput, string>
  | { name: 'name', alias?: string  } 
  | { name: 'usersWithSkill', alias?: string  } 
  
export interface UserCreateManyWithoutSkillsInput {
  create?: UserCreateWithoutSkillsInput[]
  connect?: UserWhereUniqueInput[]
}
export type UserCreateManyWithoutSkillsInputInputObject =
  | Extract<keyof UserCreateManyWithoutSkillsInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface UserCreateWithoutSkillsInput {
  email?: string
  name?: string | null
  auth0UserId?: string
  picture?: string | null
  githubName?: string | null
  flowdockName?: string | null
  description?: string | null
  hasCompletedWizard?: boolean | null
  role?: prisma.UserRole | null
  projectsChampioned?: ProjectCreateManyWithoutChampionsInput | null
}
export type UserCreateWithoutSkillsInputInputObject =
  | Extract<keyof UserCreateWithoutSkillsInput, string>
  | { name: 'email', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'auth0UserId', alias?: string  } 
  | { name: 'picture', alias?: string  } 
  | { name: 'githubName', alias?: string  } 
  | { name: 'flowdockName', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'hasCompletedWizard', alias?: string  } 
  | { name: 'role', alias?: string  } 
  | { name: 'projectsChampioned', alias?: string  } 
  
export interface SkillCreateManyWithoutUsersWithSkillInput {
  create?: SkillCreateWithoutUsersWithSkillInput[]
  connect?: SkillWhereUniqueInput[]
}
export type SkillCreateManyWithoutUsersWithSkillInputInputObject =
  | Extract<keyof SkillCreateManyWithoutUsersWithSkillInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface SkillCreateWithoutUsersWithSkillInput {
  name?: string
  projectsWithSkill?: ProjectCreateManyWithoutSkillsInput | null
}
export type SkillCreateWithoutUsersWithSkillInputInputObject =
  | Extract<keyof SkillCreateWithoutUsersWithSkillInput, string>
  | { name: 'name', alias?: string  } 
  | { name: 'projectsWithSkill', alias?: string  } 
  
export interface ProjectCreateManyWithoutSkillsInput {
  create?: ProjectCreateWithoutSkillsInput[]
  connect?: ProjectWhereUniqueInput[]
}
export type ProjectCreateManyWithoutSkillsInputInputObject =
  | Extract<keyof ProjectCreateManyWithoutSkillsInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface ProjectCreateWithoutSkillsInput {
  name?: string
  headerImage?: string | null
  status?: prisma.ProjectStatus | null
  description?: string | null
  cfapiProjectId?: string | null
  repoName?: string | null
  champions?: UserCreateManyWithoutProjectsChampionedInput | null
}
export type ProjectCreateWithoutSkillsInputInputObject =
  | Extract<keyof ProjectCreateWithoutSkillsInput, string>
  | { name: 'name', alias?: string  } 
  | { name: 'headerImage', alias?: string  } 
  | { name: 'status', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'cfapiProjectId', alias?: string  } 
  | { name: 'repoName', alias?: string  } 
  | { name: 'champions', alias?: string  } 
  
export interface UserCreateManyWithoutProjectsChampionedInput {
  create?: UserCreateWithoutProjectsChampionedInput[]
  connect?: UserWhereUniqueInput[]
}
export type UserCreateManyWithoutProjectsChampionedInputInputObject =
  | Extract<keyof UserCreateManyWithoutProjectsChampionedInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface UserCreateWithoutProjectsChampionedInput {
  email?: string
  name?: string | null
  auth0UserId?: string
  picture?: string | null
  githubName?: string | null
  flowdockName?: string | null
  description?: string | null
  hasCompletedWizard?: boolean | null
  role?: prisma.UserRole | null
  skills?: SkillCreateManyWithoutUsersWithSkillInput | null
}
export type UserCreateWithoutProjectsChampionedInputInputObject =
  | Extract<keyof UserCreateWithoutProjectsChampionedInput, string>
  | { name: 'email', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'auth0UserId', alias?: string  } 
  | { name: 'picture', alias?: string  } 
  | { name: 'githubName', alias?: string  } 
  | { name: 'flowdockName', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'hasCompletedWizard', alias?: string  } 
  | { name: 'role', alias?: string  } 
  | { name: 'skills', alias?: string  } 
  
export interface UserUpdateInput {
  email?: string | null
  name?: string | null
  auth0UserId?: string | null
  picture?: string | null
  githubName?: string | null
  flowdockName?: string | null
  description?: string | null
  hasCompletedWizard?: boolean | null
  role?: prisma.UserRole | null
  projectsChampioned?: ProjectUpdateManyWithoutChampionsInput | null
  skills?: SkillUpdateManyWithoutUsersWithSkillInput | null
}
export type UserUpdateInputInputObject =
  | Extract<keyof UserUpdateInput, string>
  | { name: 'email', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'auth0UserId', alias?: string  } 
  | { name: 'picture', alias?: string  } 
  | { name: 'githubName', alias?: string  } 
  | { name: 'flowdockName', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'hasCompletedWizard', alias?: string  } 
  | { name: 'role', alias?: string  } 
  | { name: 'projectsChampioned', alias?: string  } 
  | { name: 'skills', alias?: string  } 
  
export interface ProjectUpdateManyWithoutChampionsInput {
  create?: ProjectCreateWithoutChampionsInput[]
  delete?: ProjectWhereUniqueInput[]
  connect?: ProjectWhereUniqueInput[]
  set?: ProjectWhereUniqueInput[]
  disconnect?: ProjectWhereUniqueInput[]
  update?: ProjectUpdateWithWhereUniqueWithoutChampionsInput[]
  upsert?: ProjectUpsertWithWhereUniqueWithoutChampionsInput[]
  deleteMany?: ProjectScalarWhereInput[]
  updateMany?: ProjectUpdateManyWithWhereNestedInput[]
}
export type ProjectUpdateManyWithoutChampionsInputInputObject =
  | Extract<keyof ProjectUpdateManyWithoutChampionsInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'delete', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  | { name: 'set', alias?: string  } 
  | { name: 'disconnect', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'deleteMany', alias?: string  } 
  | { name: 'updateMany', alias?: string  } 
  
export interface ProjectUpdateWithWhereUniqueWithoutChampionsInput {
  where?: ProjectWhereUniqueInput
  data?: ProjectUpdateWithoutChampionsDataInput
}
export type ProjectUpdateWithWhereUniqueWithoutChampionsInputInputObject =
  | Extract<keyof ProjectUpdateWithWhereUniqueWithoutChampionsInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'data', alias?: string  } 
  
export interface ProjectUpdateWithoutChampionsDataInput {
  name?: string | null
  headerImage?: string | null
  status?: prisma.ProjectStatus | null
  description?: string | null
  cfapiProjectId?: string | null
  repoName?: string | null
  skills?: SkillUpdateManyWithoutProjectsWithSkillInput | null
}
export type ProjectUpdateWithoutChampionsDataInputInputObject =
  | Extract<keyof ProjectUpdateWithoutChampionsDataInput, string>
  | { name: 'name', alias?: string  } 
  | { name: 'headerImage', alias?: string  } 
  | { name: 'status', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'cfapiProjectId', alias?: string  } 
  | { name: 'repoName', alias?: string  } 
  | { name: 'skills', alias?: string  } 
  
export interface SkillUpdateManyWithoutProjectsWithSkillInput {
  create?: SkillCreateWithoutProjectsWithSkillInput[]
  delete?: SkillWhereUniqueInput[]
  connect?: SkillWhereUniqueInput[]
  set?: SkillWhereUniqueInput[]
  disconnect?: SkillWhereUniqueInput[]
  update?: SkillUpdateWithWhereUniqueWithoutProjectsWithSkillInput[]
  upsert?: SkillUpsertWithWhereUniqueWithoutProjectsWithSkillInput[]
  deleteMany?: SkillScalarWhereInput[]
  updateMany?: SkillUpdateManyWithWhereNestedInput[]
}
export type SkillUpdateManyWithoutProjectsWithSkillInputInputObject =
  | Extract<keyof SkillUpdateManyWithoutProjectsWithSkillInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'delete', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  | { name: 'set', alias?: string  } 
  | { name: 'disconnect', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'deleteMany', alias?: string  } 
  | { name: 'updateMany', alias?: string  } 
  
export interface SkillUpdateWithWhereUniqueWithoutProjectsWithSkillInput {
  where?: SkillWhereUniqueInput
  data?: SkillUpdateWithoutProjectsWithSkillDataInput
}
export type SkillUpdateWithWhereUniqueWithoutProjectsWithSkillInputInputObject =
  | Extract<keyof SkillUpdateWithWhereUniqueWithoutProjectsWithSkillInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'data', alias?: string  } 
  
export interface SkillUpdateWithoutProjectsWithSkillDataInput {
  name?: string | null
  usersWithSkill?: UserUpdateManyWithoutSkillsInput | null
}
export type SkillUpdateWithoutProjectsWithSkillDataInputInputObject =
  | Extract<keyof SkillUpdateWithoutProjectsWithSkillDataInput, string>
  | { name: 'name', alias?: string  } 
  | { name: 'usersWithSkill', alias?: string  } 
  
export interface UserUpdateManyWithoutSkillsInput {
  create?: UserCreateWithoutSkillsInput[]
  delete?: UserWhereUniqueInput[]
  connect?: UserWhereUniqueInput[]
  set?: UserWhereUniqueInput[]
  disconnect?: UserWhereUniqueInput[]
  update?: UserUpdateWithWhereUniqueWithoutSkillsInput[]
  upsert?: UserUpsertWithWhereUniqueWithoutSkillsInput[]
  deleteMany?: UserScalarWhereInput[]
  updateMany?: UserUpdateManyWithWhereNestedInput[]
}
export type UserUpdateManyWithoutSkillsInputInputObject =
  | Extract<keyof UserUpdateManyWithoutSkillsInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'delete', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  | { name: 'set', alias?: string  } 
  | { name: 'disconnect', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'deleteMany', alias?: string  } 
  | { name: 'updateMany', alias?: string  } 
  
export interface UserUpdateWithWhereUniqueWithoutSkillsInput {
  where?: UserWhereUniqueInput
  data?: UserUpdateWithoutSkillsDataInput
}
export type UserUpdateWithWhereUniqueWithoutSkillsInputInputObject =
  | Extract<keyof UserUpdateWithWhereUniqueWithoutSkillsInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'data', alias?: string  } 
  
export interface UserUpdateWithoutSkillsDataInput {
  email?: string | null
  name?: string | null
  auth0UserId?: string | null
  picture?: string | null
  githubName?: string | null
  flowdockName?: string | null
  description?: string | null
  hasCompletedWizard?: boolean | null
  role?: prisma.UserRole | null
  projectsChampioned?: ProjectUpdateManyWithoutChampionsInput | null
}
export type UserUpdateWithoutSkillsDataInputInputObject =
  | Extract<keyof UserUpdateWithoutSkillsDataInput, string>
  | { name: 'email', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'auth0UserId', alias?: string  } 
  | { name: 'picture', alias?: string  } 
  | { name: 'githubName', alias?: string  } 
  | { name: 'flowdockName', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'hasCompletedWizard', alias?: string  } 
  | { name: 'role', alias?: string  } 
  | { name: 'projectsChampioned', alias?: string  } 
  
export interface UserUpsertWithWhereUniqueWithoutSkillsInput {
  where?: UserWhereUniqueInput
  update?: UserUpdateWithoutSkillsDataInput
  create?: UserCreateWithoutSkillsInput
}
export type UserUpsertWithWhereUniqueWithoutSkillsInputInputObject =
  | Extract<keyof UserUpsertWithWhereUniqueWithoutSkillsInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface UserScalarWhereInput {
  id?: string | null
  id_not?: string | null
  id_in?: string[]
  id_not_in?: string[]
  id_lt?: string | null
  id_lte?: string | null
  id_gt?: string | null
  id_gte?: string | null
  id_contains?: string | null
  id_not_contains?: string | null
  id_starts_with?: string | null
  id_not_starts_with?: string | null
  id_ends_with?: string | null
  id_not_ends_with?: string | null
  createdAt?: string | null
  createdAt_not?: string | null
  createdAt_in?: string[]
  createdAt_not_in?: string[]
  createdAt_lt?: string | null
  createdAt_lte?: string | null
  createdAt_gt?: string | null
  createdAt_gte?: string | null
  updatedAt?: string | null
  updatedAt_not?: string | null
  updatedAt_in?: string[]
  updatedAt_not_in?: string[]
  updatedAt_lt?: string | null
  updatedAt_lte?: string | null
  updatedAt_gt?: string | null
  updatedAt_gte?: string | null
  email?: string | null
  email_not?: string | null
  email_in?: string[]
  email_not_in?: string[]
  email_lt?: string | null
  email_lte?: string | null
  email_gt?: string | null
  email_gte?: string | null
  email_contains?: string | null
  email_not_contains?: string | null
  email_starts_with?: string | null
  email_not_starts_with?: string | null
  email_ends_with?: string | null
  email_not_ends_with?: string | null
  name?: string | null
  name_not?: string | null
  name_in?: string[]
  name_not_in?: string[]
  name_lt?: string | null
  name_lte?: string | null
  name_gt?: string | null
  name_gte?: string | null
  name_contains?: string | null
  name_not_contains?: string | null
  name_starts_with?: string | null
  name_not_starts_with?: string | null
  name_ends_with?: string | null
  name_not_ends_with?: string | null
  auth0UserId?: string | null
  auth0UserId_not?: string | null
  auth0UserId_in?: string[]
  auth0UserId_not_in?: string[]
  auth0UserId_lt?: string | null
  auth0UserId_lte?: string | null
  auth0UserId_gt?: string | null
  auth0UserId_gte?: string | null
  auth0UserId_contains?: string | null
  auth0UserId_not_contains?: string | null
  auth0UserId_starts_with?: string | null
  auth0UserId_not_starts_with?: string | null
  auth0UserId_ends_with?: string | null
  auth0UserId_not_ends_with?: string | null
  picture?: string | null
  picture_not?: string | null
  picture_in?: string[]
  picture_not_in?: string[]
  picture_lt?: string | null
  picture_lte?: string | null
  picture_gt?: string | null
  picture_gte?: string | null
  picture_contains?: string | null
  picture_not_contains?: string | null
  picture_starts_with?: string | null
  picture_not_starts_with?: string | null
  picture_ends_with?: string | null
  picture_not_ends_with?: string | null
  githubName?: string | null
  githubName_not?: string | null
  githubName_in?: string[]
  githubName_not_in?: string[]
  githubName_lt?: string | null
  githubName_lte?: string | null
  githubName_gt?: string | null
  githubName_gte?: string | null
  githubName_contains?: string | null
  githubName_not_contains?: string | null
  githubName_starts_with?: string | null
  githubName_not_starts_with?: string | null
  githubName_ends_with?: string | null
  githubName_not_ends_with?: string | null
  flowdockName?: string | null
  flowdockName_not?: string | null
  flowdockName_in?: string[]
  flowdockName_not_in?: string[]
  flowdockName_lt?: string | null
  flowdockName_lte?: string | null
  flowdockName_gt?: string | null
  flowdockName_gte?: string | null
  flowdockName_contains?: string | null
  flowdockName_not_contains?: string | null
  flowdockName_starts_with?: string | null
  flowdockName_not_starts_with?: string | null
  flowdockName_ends_with?: string | null
  flowdockName_not_ends_with?: string | null
  description?: string | null
  description_not?: string | null
  description_in?: string[]
  description_not_in?: string[]
  description_lt?: string | null
  description_lte?: string | null
  description_gt?: string | null
  description_gte?: string | null
  description_contains?: string | null
  description_not_contains?: string | null
  description_starts_with?: string | null
  description_not_starts_with?: string | null
  description_ends_with?: string | null
  description_not_ends_with?: string | null
  hasCompletedWizard?: boolean | null
  hasCompletedWizard_not?: boolean | null
  role?: prisma.UserRole | null
  role_not?: prisma.UserRole | null
  role_in?: prisma.UserRole[]
  role_not_in?: prisma.UserRole[]
  AND?: UserScalarWhereInput[]
  OR?: UserScalarWhereInput[]
  NOT?: UserScalarWhereInput[]
}
export type UserScalarWhereInputInputObject =
  | Extract<keyof UserScalarWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'id_contains', alias?: string  } 
  | { name: 'id_not_contains', alias?: string  } 
  | { name: 'id_starts_with', alias?: string  } 
  | { name: 'id_not_starts_with', alias?: string  } 
  | { name: 'id_ends_with', alias?: string  } 
  | { name: 'id_not_ends_with', alias?: string  } 
  | { name: 'createdAt', alias?: string  } 
  | { name: 'createdAt_not', alias?: string  } 
  | { name: 'createdAt_in', alias?: string  } 
  | { name: 'createdAt_not_in', alias?: string  } 
  | { name: 'createdAt_lt', alias?: string  } 
  | { name: 'createdAt_lte', alias?: string  } 
  | { name: 'createdAt_gt', alias?: string  } 
  | { name: 'createdAt_gte', alias?: string  } 
  | { name: 'updatedAt', alias?: string  } 
  | { name: 'updatedAt_not', alias?: string  } 
  | { name: 'updatedAt_in', alias?: string  } 
  | { name: 'updatedAt_not_in', alias?: string  } 
  | { name: 'updatedAt_lt', alias?: string  } 
  | { name: 'updatedAt_lte', alias?: string  } 
  | { name: 'updatedAt_gt', alias?: string  } 
  | { name: 'updatedAt_gte', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'email_not', alias?: string  } 
  | { name: 'email_in', alias?: string  } 
  | { name: 'email_not_in', alias?: string  } 
  | { name: 'email_lt', alias?: string  } 
  | { name: 'email_lte', alias?: string  } 
  | { name: 'email_gt', alias?: string  } 
  | { name: 'email_gte', alias?: string  } 
  | { name: 'email_contains', alias?: string  } 
  | { name: 'email_not_contains', alias?: string  } 
  | { name: 'email_starts_with', alias?: string  } 
  | { name: 'email_not_starts_with', alias?: string  } 
  | { name: 'email_ends_with', alias?: string  } 
  | { name: 'email_not_ends_with', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'name_not', alias?: string  } 
  | { name: 'name_in', alias?: string  } 
  | { name: 'name_not_in', alias?: string  } 
  | { name: 'name_lt', alias?: string  } 
  | { name: 'name_lte', alias?: string  } 
  | { name: 'name_gt', alias?: string  } 
  | { name: 'name_gte', alias?: string  } 
  | { name: 'name_contains', alias?: string  } 
  | { name: 'name_not_contains', alias?: string  } 
  | { name: 'name_starts_with', alias?: string  } 
  | { name: 'name_not_starts_with', alias?: string  } 
  | { name: 'name_ends_with', alias?: string  } 
  | { name: 'name_not_ends_with', alias?: string  } 
  | { name: 'auth0UserId', alias?: string  } 
  | { name: 'auth0UserId_not', alias?: string  } 
  | { name: 'auth0UserId_in', alias?: string  } 
  | { name: 'auth0UserId_not_in', alias?: string  } 
  | { name: 'auth0UserId_lt', alias?: string  } 
  | { name: 'auth0UserId_lte', alias?: string  } 
  | { name: 'auth0UserId_gt', alias?: string  } 
  | { name: 'auth0UserId_gte', alias?: string  } 
  | { name: 'auth0UserId_contains', alias?: string  } 
  | { name: 'auth0UserId_not_contains', alias?: string  } 
  | { name: 'auth0UserId_starts_with', alias?: string  } 
  | { name: 'auth0UserId_not_starts_with', alias?: string  } 
  | { name: 'auth0UserId_ends_with', alias?: string  } 
  | { name: 'auth0UserId_not_ends_with', alias?: string  } 
  | { name: 'picture', alias?: string  } 
  | { name: 'picture_not', alias?: string  } 
  | { name: 'picture_in', alias?: string  } 
  | { name: 'picture_not_in', alias?: string  } 
  | { name: 'picture_lt', alias?: string  } 
  | { name: 'picture_lte', alias?: string  } 
  | { name: 'picture_gt', alias?: string  } 
  | { name: 'picture_gte', alias?: string  } 
  | { name: 'picture_contains', alias?: string  } 
  | { name: 'picture_not_contains', alias?: string  } 
  | { name: 'picture_starts_with', alias?: string  } 
  | { name: 'picture_not_starts_with', alias?: string  } 
  | { name: 'picture_ends_with', alias?: string  } 
  | { name: 'picture_not_ends_with', alias?: string  } 
  | { name: 'githubName', alias?: string  } 
  | { name: 'githubName_not', alias?: string  } 
  | { name: 'githubName_in', alias?: string  } 
  | { name: 'githubName_not_in', alias?: string  } 
  | { name: 'githubName_lt', alias?: string  } 
  | { name: 'githubName_lte', alias?: string  } 
  | { name: 'githubName_gt', alias?: string  } 
  | { name: 'githubName_gte', alias?: string  } 
  | { name: 'githubName_contains', alias?: string  } 
  | { name: 'githubName_not_contains', alias?: string  } 
  | { name: 'githubName_starts_with', alias?: string  } 
  | { name: 'githubName_not_starts_with', alias?: string  } 
  | { name: 'githubName_ends_with', alias?: string  } 
  | { name: 'githubName_not_ends_with', alias?: string  } 
  | { name: 'flowdockName', alias?: string  } 
  | { name: 'flowdockName_not', alias?: string  } 
  | { name: 'flowdockName_in', alias?: string  } 
  | { name: 'flowdockName_not_in', alias?: string  } 
  | { name: 'flowdockName_lt', alias?: string  } 
  | { name: 'flowdockName_lte', alias?: string  } 
  | { name: 'flowdockName_gt', alias?: string  } 
  | { name: 'flowdockName_gte', alias?: string  } 
  | { name: 'flowdockName_contains', alias?: string  } 
  | { name: 'flowdockName_not_contains', alias?: string  } 
  | { name: 'flowdockName_starts_with', alias?: string  } 
  | { name: 'flowdockName_not_starts_with', alias?: string  } 
  | { name: 'flowdockName_ends_with', alias?: string  } 
  | { name: 'flowdockName_not_ends_with', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'description_not', alias?: string  } 
  | { name: 'description_in', alias?: string  } 
  | { name: 'description_not_in', alias?: string  } 
  | { name: 'description_lt', alias?: string  } 
  | { name: 'description_lte', alias?: string  } 
  | { name: 'description_gt', alias?: string  } 
  | { name: 'description_gte', alias?: string  } 
  | { name: 'description_contains', alias?: string  } 
  | { name: 'description_not_contains', alias?: string  } 
  | { name: 'description_starts_with', alias?: string  } 
  | { name: 'description_not_starts_with', alias?: string  } 
  | { name: 'description_ends_with', alias?: string  } 
  | { name: 'description_not_ends_with', alias?: string  } 
  | { name: 'hasCompletedWizard', alias?: string  } 
  | { name: 'hasCompletedWizard_not', alias?: string  } 
  | { name: 'role', alias?: string  } 
  | { name: 'role_not', alias?: string  } 
  | { name: 'role_in', alias?: string  } 
  | { name: 'role_not_in', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface UserUpdateManyWithWhereNestedInput {
  where?: UserScalarWhereInput
  data?: UserUpdateManyDataInput
}
export type UserUpdateManyWithWhereNestedInputInputObject =
  | Extract<keyof UserUpdateManyWithWhereNestedInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'data', alias?: string  } 
  
export interface UserUpdateManyDataInput {
  email?: string | null
  name?: string | null
  auth0UserId?: string | null
  picture?: string | null
  githubName?: string | null
  flowdockName?: string | null
  description?: string | null
  hasCompletedWizard?: boolean | null
  role?: prisma.UserRole | null
}
export type UserUpdateManyDataInputInputObject =
  | Extract<keyof UserUpdateManyDataInput, string>
  | { name: 'email', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'auth0UserId', alias?: string  } 
  | { name: 'picture', alias?: string  } 
  | { name: 'githubName', alias?: string  } 
  | { name: 'flowdockName', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'hasCompletedWizard', alias?: string  } 
  | { name: 'role', alias?: string  } 
  
export interface SkillUpsertWithWhereUniqueWithoutProjectsWithSkillInput {
  where?: SkillWhereUniqueInput
  update?: SkillUpdateWithoutProjectsWithSkillDataInput
  create?: SkillCreateWithoutProjectsWithSkillInput
}
export type SkillUpsertWithWhereUniqueWithoutProjectsWithSkillInputInputObject =
  | Extract<keyof SkillUpsertWithWhereUniqueWithoutProjectsWithSkillInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface SkillScalarWhereInput {
  id?: string | null
  id_not?: string | null
  id_in?: string[]
  id_not_in?: string[]
  id_lt?: string | null
  id_lte?: string | null
  id_gt?: string | null
  id_gte?: string | null
  id_contains?: string | null
  id_not_contains?: string | null
  id_starts_with?: string | null
  id_not_starts_with?: string | null
  id_ends_with?: string | null
  id_not_ends_with?: string | null
  createdAt?: string | null
  createdAt_not?: string | null
  createdAt_in?: string[]
  createdAt_not_in?: string[]
  createdAt_lt?: string | null
  createdAt_lte?: string | null
  createdAt_gt?: string | null
  createdAt_gte?: string | null
  updatedAt?: string | null
  updatedAt_not?: string | null
  updatedAt_in?: string[]
  updatedAt_not_in?: string[]
  updatedAt_lt?: string | null
  updatedAt_lte?: string | null
  updatedAt_gt?: string | null
  updatedAt_gte?: string | null
  name?: string | null
  name_not?: string | null
  name_in?: string[]
  name_not_in?: string[]
  name_lt?: string | null
  name_lte?: string | null
  name_gt?: string | null
  name_gte?: string | null
  name_contains?: string | null
  name_not_contains?: string | null
  name_starts_with?: string | null
  name_not_starts_with?: string | null
  name_ends_with?: string | null
  name_not_ends_with?: string | null
  AND?: SkillScalarWhereInput[]
  OR?: SkillScalarWhereInput[]
  NOT?: SkillScalarWhereInput[]
}
export type SkillScalarWhereInputInputObject =
  | Extract<keyof SkillScalarWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'id_contains', alias?: string  } 
  | { name: 'id_not_contains', alias?: string  } 
  | { name: 'id_starts_with', alias?: string  } 
  | { name: 'id_not_starts_with', alias?: string  } 
  | { name: 'id_ends_with', alias?: string  } 
  | { name: 'id_not_ends_with', alias?: string  } 
  | { name: 'createdAt', alias?: string  } 
  | { name: 'createdAt_not', alias?: string  } 
  | { name: 'createdAt_in', alias?: string  } 
  | { name: 'createdAt_not_in', alias?: string  } 
  | { name: 'createdAt_lt', alias?: string  } 
  | { name: 'createdAt_lte', alias?: string  } 
  | { name: 'createdAt_gt', alias?: string  } 
  | { name: 'createdAt_gte', alias?: string  } 
  | { name: 'updatedAt', alias?: string  } 
  | { name: 'updatedAt_not', alias?: string  } 
  | { name: 'updatedAt_in', alias?: string  } 
  | { name: 'updatedAt_not_in', alias?: string  } 
  | { name: 'updatedAt_lt', alias?: string  } 
  | { name: 'updatedAt_lte', alias?: string  } 
  | { name: 'updatedAt_gt', alias?: string  } 
  | { name: 'updatedAt_gte', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'name_not', alias?: string  } 
  | { name: 'name_in', alias?: string  } 
  | { name: 'name_not_in', alias?: string  } 
  | { name: 'name_lt', alias?: string  } 
  | { name: 'name_lte', alias?: string  } 
  | { name: 'name_gt', alias?: string  } 
  | { name: 'name_gte', alias?: string  } 
  | { name: 'name_contains', alias?: string  } 
  | { name: 'name_not_contains', alias?: string  } 
  | { name: 'name_starts_with', alias?: string  } 
  | { name: 'name_not_starts_with', alias?: string  } 
  | { name: 'name_ends_with', alias?: string  } 
  | { name: 'name_not_ends_with', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface SkillUpdateManyWithWhereNestedInput {
  where?: SkillScalarWhereInput
  data?: SkillUpdateManyDataInput
}
export type SkillUpdateManyWithWhereNestedInputInputObject =
  | Extract<keyof SkillUpdateManyWithWhereNestedInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'data', alias?: string  } 
  
export interface SkillUpdateManyDataInput {
  name?: string | null
}
export type SkillUpdateManyDataInputInputObject =
  | Extract<keyof SkillUpdateManyDataInput, string>
  | { name: 'name', alias?: string  } 
  
export interface ProjectUpsertWithWhereUniqueWithoutChampionsInput {
  where?: ProjectWhereUniqueInput
  update?: ProjectUpdateWithoutChampionsDataInput
  create?: ProjectCreateWithoutChampionsInput
}
export type ProjectUpsertWithWhereUniqueWithoutChampionsInputInputObject =
  | Extract<keyof ProjectUpsertWithWhereUniqueWithoutChampionsInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface ProjectScalarWhereInput {
  id?: string | null
  id_not?: string | null
  id_in?: string[]
  id_not_in?: string[]
  id_lt?: string | null
  id_lte?: string | null
  id_gt?: string | null
  id_gte?: string | null
  id_contains?: string | null
  id_not_contains?: string | null
  id_starts_with?: string | null
  id_not_starts_with?: string | null
  id_ends_with?: string | null
  id_not_ends_with?: string | null
  createdAt?: string | null
  createdAt_not?: string | null
  createdAt_in?: string[]
  createdAt_not_in?: string[]
  createdAt_lt?: string | null
  createdAt_lte?: string | null
  createdAt_gt?: string | null
  createdAt_gte?: string | null
  updatedAt?: string | null
  updatedAt_not?: string | null
  updatedAt_in?: string[]
  updatedAt_not_in?: string[]
  updatedAt_lt?: string | null
  updatedAt_lte?: string | null
  updatedAt_gt?: string | null
  updatedAt_gte?: string | null
  name?: string | null
  name_not?: string | null
  name_in?: string[]
  name_not_in?: string[]
  name_lt?: string | null
  name_lte?: string | null
  name_gt?: string | null
  name_gte?: string | null
  name_contains?: string | null
  name_not_contains?: string | null
  name_starts_with?: string | null
  name_not_starts_with?: string | null
  name_ends_with?: string | null
  name_not_ends_with?: string | null
  headerImage?: string | null
  headerImage_not?: string | null
  headerImage_in?: string[]
  headerImage_not_in?: string[]
  headerImage_lt?: string | null
  headerImage_lte?: string | null
  headerImage_gt?: string | null
  headerImage_gte?: string | null
  headerImage_contains?: string | null
  headerImage_not_contains?: string | null
  headerImage_starts_with?: string | null
  headerImage_not_starts_with?: string | null
  headerImage_ends_with?: string | null
  headerImage_not_ends_with?: string | null
  status?: prisma.ProjectStatus | null
  status_not?: prisma.ProjectStatus | null
  status_in?: prisma.ProjectStatus[]
  status_not_in?: prisma.ProjectStatus[]
  description?: string | null
  description_not?: string | null
  description_in?: string[]
  description_not_in?: string[]
  description_lt?: string | null
  description_lte?: string | null
  description_gt?: string | null
  description_gte?: string | null
  description_contains?: string | null
  description_not_contains?: string | null
  description_starts_with?: string | null
  description_not_starts_with?: string | null
  description_ends_with?: string | null
  description_not_ends_with?: string | null
  cfapiProjectId?: string | null
  cfapiProjectId_not?: string | null
  cfapiProjectId_in?: string[]
  cfapiProjectId_not_in?: string[]
  cfapiProjectId_lt?: string | null
  cfapiProjectId_lte?: string | null
  cfapiProjectId_gt?: string | null
  cfapiProjectId_gte?: string | null
  cfapiProjectId_contains?: string | null
  cfapiProjectId_not_contains?: string | null
  cfapiProjectId_starts_with?: string | null
  cfapiProjectId_not_starts_with?: string | null
  cfapiProjectId_ends_with?: string | null
  cfapiProjectId_not_ends_with?: string | null
  repoName?: string | null
  repoName_not?: string | null
  repoName_in?: string[]
  repoName_not_in?: string[]
  repoName_lt?: string | null
  repoName_lte?: string | null
  repoName_gt?: string | null
  repoName_gte?: string | null
  repoName_contains?: string | null
  repoName_not_contains?: string | null
  repoName_starts_with?: string | null
  repoName_not_starts_with?: string | null
  repoName_ends_with?: string | null
  repoName_not_ends_with?: string | null
  AND?: ProjectScalarWhereInput[]
  OR?: ProjectScalarWhereInput[]
  NOT?: ProjectScalarWhereInput[]
}
export type ProjectScalarWhereInputInputObject =
  | Extract<keyof ProjectScalarWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'id_contains', alias?: string  } 
  | { name: 'id_not_contains', alias?: string  } 
  | { name: 'id_starts_with', alias?: string  } 
  | { name: 'id_not_starts_with', alias?: string  } 
  | { name: 'id_ends_with', alias?: string  } 
  | { name: 'id_not_ends_with', alias?: string  } 
  | { name: 'createdAt', alias?: string  } 
  | { name: 'createdAt_not', alias?: string  } 
  | { name: 'createdAt_in', alias?: string  } 
  | { name: 'createdAt_not_in', alias?: string  } 
  | { name: 'createdAt_lt', alias?: string  } 
  | { name: 'createdAt_lte', alias?: string  } 
  | { name: 'createdAt_gt', alias?: string  } 
  | { name: 'createdAt_gte', alias?: string  } 
  | { name: 'updatedAt', alias?: string  } 
  | { name: 'updatedAt_not', alias?: string  } 
  | { name: 'updatedAt_in', alias?: string  } 
  | { name: 'updatedAt_not_in', alias?: string  } 
  | { name: 'updatedAt_lt', alias?: string  } 
  | { name: 'updatedAt_lte', alias?: string  } 
  | { name: 'updatedAt_gt', alias?: string  } 
  | { name: 'updatedAt_gte', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'name_not', alias?: string  } 
  | { name: 'name_in', alias?: string  } 
  | { name: 'name_not_in', alias?: string  } 
  | { name: 'name_lt', alias?: string  } 
  | { name: 'name_lte', alias?: string  } 
  | { name: 'name_gt', alias?: string  } 
  | { name: 'name_gte', alias?: string  } 
  | { name: 'name_contains', alias?: string  } 
  | { name: 'name_not_contains', alias?: string  } 
  | { name: 'name_starts_with', alias?: string  } 
  | { name: 'name_not_starts_with', alias?: string  } 
  | { name: 'name_ends_with', alias?: string  } 
  | { name: 'name_not_ends_with', alias?: string  } 
  | { name: 'headerImage', alias?: string  } 
  | { name: 'headerImage_not', alias?: string  } 
  | { name: 'headerImage_in', alias?: string  } 
  | { name: 'headerImage_not_in', alias?: string  } 
  | { name: 'headerImage_lt', alias?: string  } 
  | { name: 'headerImage_lte', alias?: string  } 
  | { name: 'headerImage_gt', alias?: string  } 
  | { name: 'headerImage_gte', alias?: string  } 
  | { name: 'headerImage_contains', alias?: string  } 
  | { name: 'headerImage_not_contains', alias?: string  } 
  | { name: 'headerImage_starts_with', alias?: string  } 
  | { name: 'headerImage_not_starts_with', alias?: string  } 
  | { name: 'headerImage_ends_with', alias?: string  } 
  | { name: 'headerImage_not_ends_with', alias?: string  } 
  | { name: 'status', alias?: string  } 
  | { name: 'status_not', alias?: string  } 
  | { name: 'status_in', alias?: string  } 
  | { name: 'status_not_in', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'description_not', alias?: string  } 
  | { name: 'description_in', alias?: string  } 
  | { name: 'description_not_in', alias?: string  } 
  | { name: 'description_lt', alias?: string  } 
  | { name: 'description_lte', alias?: string  } 
  | { name: 'description_gt', alias?: string  } 
  | { name: 'description_gte', alias?: string  } 
  | { name: 'description_contains', alias?: string  } 
  | { name: 'description_not_contains', alias?: string  } 
  | { name: 'description_starts_with', alias?: string  } 
  | { name: 'description_not_starts_with', alias?: string  } 
  | { name: 'description_ends_with', alias?: string  } 
  | { name: 'description_not_ends_with', alias?: string  } 
  | { name: 'cfapiProjectId', alias?: string  } 
  | { name: 'cfapiProjectId_not', alias?: string  } 
  | { name: 'cfapiProjectId_in', alias?: string  } 
  | { name: 'cfapiProjectId_not_in', alias?: string  } 
  | { name: 'cfapiProjectId_lt', alias?: string  } 
  | { name: 'cfapiProjectId_lte', alias?: string  } 
  | { name: 'cfapiProjectId_gt', alias?: string  } 
  | { name: 'cfapiProjectId_gte', alias?: string  } 
  | { name: 'cfapiProjectId_contains', alias?: string  } 
  | { name: 'cfapiProjectId_not_contains', alias?: string  } 
  | { name: 'cfapiProjectId_starts_with', alias?: string  } 
  | { name: 'cfapiProjectId_not_starts_with', alias?: string  } 
  | { name: 'cfapiProjectId_ends_with', alias?: string  } 
  | { name: 'cfapiProjectId_not_ends_with', alias?: string  } 
  | { name: 'repoName', alias?: string  } 
  | { name: 'repoName_not', alias?: string  } 
  | { name: 'repoName_in', alias?: string  } 
  | { name: 'repoName_not_in', alias?: string  } 
  | { name: 'repoName_lt', alias?: string  } 
  | { name: 'repoName_lte', alias?: string  } 
  | { name: 'repoName_gt', alias?: string  } 
  | { name: 'repoName_gte', alias?: string  } 
  | { name: 'repoName_contains', alias?: string  } 
  | { name: 'repoName_not_contains', alias?: string  } 
  | { name: 'repoName_starts_with', alias?: string  } 
  | { name: 'repoName_not_starts_with', alias?: string  } 
  | { name: 'repoName_ends_with', alias?: string  } 
  | { name: 'repoName_not_ends_with', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface ProjectUpdateManyWithWhereNestedInput {
  where?: ProjectScalarWhereInput
  data?: ProjectUpdateManyDataInput
}
export type ProjectUpdateManyWithWhereNestedInputInputObject =
  | Extract<keyof ProjectUpdateManyWithWhereNestedInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'data', alias?: string  } 
  
export interface ProjectUpdateManyDataInput {
  name?: string | null
  headerImage?: string | null
  status?: prisma.ProjectStatus | null
  description?: string | null
  cfapiProjectId?: string | null
  repoName?: string | null
}
export type ProjectUpdateManyDataInputInputObject =
  | Extract<keyof ProjectUpdateManyDataInput, string>
  | { name: 'name', alias?: string  } 
  | { name: 'headerImage', alias?: string  } 
  | { name: 'status', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'cfapiProjectId', alias?: string  } 
  | { name: 'repoName', alias?: string  } 
  
export interface SkillUpdateManyWithoutUsersWithSkillInput {
  create?: SkillCreateWithoutUsersWithSkillInput[]
  delete?: SkillWhereUniqueInput[]
  connect?: SkillWhereUniqueInput[]
  set?: SkillWhereUniqueInput[]
  disconnect?: SkillWhereUniqueInput[]
  update?: SkillUpdateWithWhereUniqueWithoutUsersWithSkillInput[]
  upsert?: SkillUpsertWithWhereUniqueWithoutUsersWithSkillInput[]
  deleteMany?: SkillScalarWhereInput[]
  updateMany?: SkillUpdateManyWithWhereNestedInput[]
}
export type SkillUpdateManyWithoutUsersWithSkillInputInputObject =
  | Extract<keyof SkillUpdateManyWithoutUsersWithSkillInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'delete', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  | { name: 'set', alias?: string  } 
  | { name: 'disconnect', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'deleteMany', alias?: string  } 
  | { name: 'updateMany', alias?: string  } 
  
export interface SkillUpdateWithWhereUniqueWithoutUsersWithSkillInput {
  where?: SkillWhereUniqueInput
  data?: SkillUpdateWithoutUsersWithSkillDataInput
}
export type SkillUpdateWithWhereUniqueWithoutUsersWithSkillInputInputObject =
  | Extract<keyof SkillUpdateWithWhereUniqueWithoutUsersWithSkillInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'data', alias?: string  } 
  
export interface SkillUpdateWithoutUsersWithSkillDataInput {
  name?: string | null
  projectsWithSkill?: ProjectUpdateManyWithoutSkillsInput | null
}
export type SkillUpdateWithoutUsersWithSkillDataInputInputObject =
  | Extract<keyof SkillUpdateWithoutUsersWithSkillDataInput, string>
  | { name: 'name', alias?: string  } 
  | { name: 'projectsWithSkill', alias?: string  } 
  
export interface ProjectUpdateManyWithoutSkillsInput {
  create?: ProjectCreateWithoutSkillsInput[]
  delete?: ProjectWhereUniqueInput[]
  connect?: ProjectWhereUniqueInput[]
  set?: ProjectWhereUniqueInput[]
  disconnect?: ProjectWhereUniqueInput[]
  update?: ProjectUpdateWithWhereUniqueWithoutSkillsInput[]
  upsert?: ProjectUpsertWithWhereUniqueWithoutSkillsInput[]
  deleteMany?: ProjectScalarWhereInput[]
  updateMany?: ProjectUpdateManyWithWhereNestedInput[]
}
export type ProjectUpdateManyWithoutSkillsInputInputObject =
  | Extract<keyof ProjectUpdateManyWithoutSkillsInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'delete', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  | { name: 'set', alias?: string  } 
  | { name: 'disconnect', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'deleteMany', alias?: string  } 
  | { name: 'updateMany', alias?: string  } 
  
export interface ProjectUpdateWithWhereUniqueWithoutSkillsInput {
  where?: ProjectWhereUniqueInput
  data?: ProjectUpdateWithoutSkillsDataInput
}
export type ProjectUpdateWithWhereUniqueWithoutSkillsInputInputObject =
  | Extract<keyof ProjectUpdateWithWhereUniqueWithoutSkillsInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'data', alias?: string  } 
  
export interface ProjectUpdateWithoutSkillsDataInput {
  name?: string | null
  headerImage?: string | null
  status?: prisma.ProjectStatus | null
  description?: string | null
  cfapiProjectId?: string | null
  repoName?: string | null
  champions?: UserUpdateManyWithoutProjectsChampionedInput | null
}
export type ProjectUpdateWithoutSkillsDataInputInputObject =
  | Extract<keyof ProjectUpdateWithoutSkillsDataInput, string>
  | { name: 'name', alias?: string  } 
  | { name: 'headerImage', alias?: string  } 
  | { name: 'status', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'cfapiProjectId', alias?: string  } 
  | { name: 'repoName', alias?: string  } 
  | { name: 'champions', alias?: string  } 
  
export interface UserUpdateManyWithoutProjectsChampionedInput {
  create?: UserCreateWithoutProjectsChampionedInput[]
  delete?: UserWhereUniqueInput[]
  connect?: UserWhereUniqueInput[]
  set?: UserWhereUniqueInput[]
  disconnect?: UserWhereUniqueInput[]
  update?: UserUpdateWithWhereUniqueWithoutProjectsChampionedInput[]
  upsert?: UserUpsertWithWhereUniqueWithoutProjectsChampionedInput[]
  deleteMany?: UserScalarWhereInput[]
  updateMany?: UserUpdateManyWithWhereNestedInput[]
}
export type UserUpdateManyWithoutProjectsChampionedInputInputObject =
  | Extract<keyof UserUpdateManyWithoutProjectsChampionedInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'delete', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  | { name: 'set', alias?: string  } 
  | { name: 'disconnect', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'deleteMany', alias?: string  } 
  | { name: 'updateMany', alias?: string  } 
  
export interface UserUpdateWithWhereUniqueWithoutProjectsChampionedInput {
  where?: UserWhereUniqueInput
  data?: UserUpdateWithoutProjectsChampionedDataInput
}
export type UserUpdateWithWhereUniqueWithoutProjectsChampionedInputInputObject =
  | Extract<keyof UserUpdateWithWhereUniqueWithoutProjectsChampionedInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'data', alias?: string  } 
  
export interface UserUpdateWithoutProjectsChampionedDataInput {
  email?: string | null
  name?: string | null
  auth0UserId?: string | null
  picture?: string | null
  githubName?: string | null
  flowdockName?: string | null
  description?: string | null
  hasCompletedWizard?: boolean | null
  role?: prisma.UserRole | null
  skills?: SkillUpdateManyWithoutUsersWithSkillInput | null
}
export type UserUpdateWithoutProjectsChampionedDataInputInputObject =
  | Extract<keyof UserUpdateWithoutProjectsChampionedDataInput, string>
  | { name: 'email', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'auth0UserId', alias?: string  } 
  | { name: 'picture', alias?: string  } 
  | { name: 'githubName', alias?: string  } 
  | { name: 'flowdockName', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'hasCompletedWizard', alias?: string  } 
  | { name: 'role', alias?: string  } 
  | { name: 'skills', alias?: string  } 
  
export interface UserUpsertWithWhereUniqueWithoutProjectsChampionedInput {
  where?: UserWhereUniqueInput
  update?: UserUpdateWithoutProjectsChampionedDataInput
  create?: UserCreateWithoutProjectsChampionedInput
}
export type UserUpsertWithWhereUniqueWithoutProjectsChampionedInputInputObject =
  | Extract<keyof UserUpsertWithWhereUniqueWithoutProjectsChampionedInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface ProjectUpsertWithWhereUniqueWithoutSkillsInput {
  where?: ProjectWhereUniqueInput
  update?: ProjectUpdateWithoutSkillsDataInput
  create?: ProjectCreateWithoutSkillsInput
}
export type ProjectUpsertWithWhereUniqueWithoutSkillsInputInputObject =
  | Extract<keyof ProjectUpsertWithWhereUniqueWithoutSkillsInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface SkillUpsertWithWhereUniqueWithoutUsersWithSkillInput {
  where?: SkillWhereUniqueInput
  update?: SkillUpdateWithoutUsersWithSkillDataInput
  create?: SkillCreateWithoutUsersWithSkillInput
}
export type SkillUpsertWithWhereUniqueWithoutUsersWithSkillInputInputObject =
  | Extract<keyof SkillUpsertWithWhereUniqueWithoutUsersWithSkillInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface UserUpdateManyMutationInput {
  email?: string | null
  name?: string | null
  auth0UserId?: string | null
  picture?: string | null
  githubName?: string | null
  flowdockName?: string | null
  description?: string | null
  hasCompletedWizard?: boolean | null
  role?: prisma.UserRole | null
}
export type UserUpdateManyMutationInputInputObject =
  | Extract<keyof UserUpdateManyMutationInput, string>
  | { name: 'email', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'auth0UserId', alias?: string  } 
  | { name: 'picture', alias?: string  } 
  | { name: 'githubName', alias?: string  } 
  | { name: 'flowdockName', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'hasCompletedWizard', alias?: string  } 
  | { name: 'role', alias?: string  } 
  
export interface ProjectCreateInput {
  name?: string
  headerImage?: string | null
  status?: prisma.ProjectStatus | null
  description?: string | null
  cfapiProjectId?: string | null
  repoName?: string | null
  champions?: UserCreateManyWithoutProjectsChampionedInput | null
  skills?: SkillCreateManyWithoutProjectsWithSkillInput | null
}
export type ProjectCreateInputInputObject =
  | Extract<keyof ProjectCreateInput, string>
  | { name: 'name', alias?: string  } 
  | { name: 'headerImage', alias?: string  } 
  | { name: 'status', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'cfapiProjectId', alias?: string  } 
  | { name: 'repoName', alias?: string  } 
  | { name: 'champions', alias?: string  } 
  | { name: 'skills', alias?: string  } 
  
export interface ProjectUpdateInput {
  name?: string | null
  headerImage?: string | null
  status?: prisma.ProjectStatus | null
  description?: string | null
  cfapiProjectId?: string | null
  repoName?: string | null
  champions?: UserUpdateManyWithoutProjectsChampionedInput | null
  skills?: SkillUpdateManyWithoutProjectsWithSkillInput | null
}
export type ProjectUpdateInputInputObject =
  | Extract<keyof ProjectUpdateInput, string>
  | { name: 'name', alias?: string  } 
  | { name: 'headerImage', alias?: string  } 
  | { name: 'status', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'cfapiProjectId', alias?: string  } 
  | { name: 'repoName', alias?: string  } 
  | { name: 'champions', alias?: string  } 
  | { name: 'skills', alias?: string  } 
  
export interface ProjectUpdateManyMutationInput {
  name?: string | null
  headerImage?: string | null
  status?: prisma.ProjectStatus | null
  description?: string | null
  cfapiProjectId?: string | null
  repoName?: string | null
}
export type ProjectUpdateManyMutationInputInputObject =
  | Extract<keyof ProjectUpdateManyMutationInput, string>
  | { name: 'name', alias?: string  } 
  | { name: 'headerImage', alias?: string  } 
  | { name: 'status', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'cfapiProjectId', alias?: string  } 
  | { name: 'repoName', alias?: string  } 
  
export interface SkillCreateInput {
  name?: string
  usersWithSkill?: UserCreateManyWithoutSkillsInput | null
  projectsWithSkill?: ProjectCreateManyWithoutSkillsInput | null
}
export type SkillCreateInputInputObject =
  | Extract<keyof SkillCreateInput, string>
  | { name: 'name', alias?: string  } 
  | { name: 'usersWithSkill', alias?: string  } 
  | { name: 'projectsWithSkill', alias?: string  } 
  
export interface SkillUpdateInput {
  name?: string | null
  usersWithSkill?: UserUpdateManyWithoutSkillsInput | null
  projectsWithSkill?: ProjectUpdateManyWithoutSkillsInput | null
}
export type SkillUpdateInputInputObject =
  | Extract<keyof SkillUpdateInput, string>
  | { name: 'name', alias?: string  } 
  | { name: 'usersWithSkill', alias?: string  } 
  | { name: 'projectsWithSkill', alias?: string  } 
  
export interface SkillUpdateManyMutationInput {
  name?: string | null
}
export type SkillUpdateManyMutationInputInputObject =
  | Extract<keyof SkillUpdateManyMutationInput, string>
  | { name: 'name', alias?: string  } 
  
export interface UserSubscriptionWhereInput {
  mutation_in?: prisma.MutationType[]
  updatedFields_contains?: string | null
  updatedFields_contains_every?: string[]
  updatedFields_contains_some?: string[]
  node?: UserWhereInput | null
  AND?: UserSubscriptionWhereInput[]
  OR?: UserSubscriptionWhereInput[]
  NOT?: UserSubscriptionWhereInput[]
}
export type UserSubscriptionWhereInputInputObject =
  | Extract<keyof UserSubscriptionWhereInput, string>
  | { name: 'mutation_in', alias?: string  } 
  | { name: 'updatedFields_contains', alias?: string  } 
  | { name: 'updatedFields_contains_every', alias?: string  } 
  | { name: 'updatedFields_contains_some', alias?: string  } 
  | { name: 'node', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface ProjectSubscriptionWhereInput {
  mutation_in?: prisma.MutationType[]
  updatedFields_contains?: string | null
  updatedFields_contains_every?: string[]
  updatedFields_contains_some?: string[]
  node?: ProjectWhereInput | null
  AND?: ProjectSubscriptionWhereInput[]
  OR?: ProjectSubscriptionWhereInput[]
  NOT?: ProjectSubscriptionWhereInput[]
}
export type ProjectSubscriptionWhereInputInputObject =
  | Extract<keyof ProjectSubscriptionWhereInput, string>
  | { name: 'mutation_in', alias?: string  } 
  | { name: 'updatedFields_contains', alias?: string  } 
  | { name: 'updatedFields_contains_every', alias?: string  } 
  | { name: 'updatedFields_contains_some', alias?: string  } 
  | { name: 'node', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface SkillSubscriptionWhereInput {
  mutation_in?: prisma.MutationType[]
  updatedFields_contains?: string | null
  updatedFields_contains_every?: string[]
  updatedFields_contains_some?: string[]
  node?: SkillWhereInput | null
  AND?: SkillSubscriptionWhereInput[]
  OR?: SkillSubscriptionWhereInput[]
  NOT?: SkillSubscriptionWhereInput[]
}
export type SkillSubscriptionWhereInputInputObject =
  | Extract<keyof SkillSubscriptionWhereInput, string>
  | { name: 'mutation_in', alias?: string  } 
  | { name: 'updatedFields_contains', alias?: string  } 
  | { name: 'updatedFields_contains_every', alias?: string  } 
  | { name: 'updatedFields_contains_some', alias?: string  } 
  | { name: 'node', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  

export type UserRoleValues =
  | 'REGULAR'
  | 'ADMIN'
  
export type ProjectStatusValues =
  | 'Idea'
  | 'Pitch'
  | 'Exploration'
  | 'ActiveDevelopment'
  | 'Support'
  | 'Inactive'
  
export type ProjectOrderByInputValues =
  | 'id_ASC'
  | 'id_DESC'
  | 'createdAt_ASC'
  | 'createdAt_DESC'
  | 'updatedAt_ASC'
  | 'updatedAt_DESC'
  | 'name_ASC'
  | 'name_DESC'
  | 'headerImage_ASC'
  | 'headerImage_DESC'
  | 'status_ASC'
  | 'status_DESC'
  | 'description_ASC'
  | 'description_DESC'
  | 'cfapiProjectId_ASC'
  | 'cfapiProjectId_DESC'
  | 'repoName_ASC'
  | 'repoName_DESC'
  
export type UserOrderByInputValues =
  | 'id_ASC'
  | 'id_DESC'
  | 'createdAt_ASC'
  | 'createdAt_DESC'
  | 'updatedAt_ASC'
  | 'updatedAt_DESC'
  | 'email_ASC'
  | 'email_DESC'
  | 'name_ASC'
  | 'name_DESC'
  | 'auth0UserId_ASC'
  | 'auth0UserId_DESC'
  | 'picture_ASC'
  | 'picture_DESC'
  | 'githubName_ASC'
  | 'githubName_DESC'
  | 'flowdockName_ASC'
  | 'flowdockName_DESC'
  | 'description_ASC'
  | 'description_DESC'
  | 'hasCompletedWizard_ASC'
  | 'hasCompletedWizard_DESC'
  | 'role_ASC'
  | 'role_DESC'
  
export type SkillOrderByInputValues =
  | 'id_ASC'
  | 'id_DESC'
  | 'createdAt_ASC'
  | 'createdAt_DESC'
  | 'updatedAt_ASC'
  | 'updatedAt_DESC'
  | 'name_ASC'
  | 'name_DESC'
  
export type MutationTypeValues =
  | 'CREATED'
  | 'UPDATED'
  | 'DELETED'
  
  